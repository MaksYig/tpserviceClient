[{"E:\\WWW\\tpservice\\client\\src\\index.js":"1","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\index.js":"2","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\auth.js":"3","E:\\WWW\\tpservice\\client\\src\\components\\App\\App.js":"4","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\auth.js":"5","E:\\WWW\\tpservice\\client\\src\\api\\index.js":"6","E:\\WWW\\tpservice\\client\\src\\hoc\\MainLayout\\MainLayout.js":"7","E:\\WWW\\tpservice\\client\\src\\hoc\\UserLayout\\UserLayout.js":"8","E:\\WWW\\tpservice\\client\\src\\components\\Header\\Header.js":"9","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\types.js":"10","E:\\WWW\\tpservice\\client\\src\\components\\NavBar\\NavBar.js":"11","E:\\WWW\\tpservice\\client\\src\\components\\NavBar\\styles.js":"12","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Login\\Login.js":"13","E:\\WWW\\tpservice\\client\\src\\components\\Input\\Input.js":"14","E:\\WWW\\tpservice\\client\\src\\components\\Input\\styles.js":"15","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Login\\styles.js":"16","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\ForgotPassword\\ForgotPassword.js":"17","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\ForgotPassword\\styles.js":"18","E:\\WWW\\tpservice\\client\\src\\components\\Alert\\Alert.js":"19","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\alert.js":"20","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\alert.js":"21","E:\\WWW\\tpservice\\client\\src\\components\\MainMenu\\MainMenu.js":"22","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\Tour\\Tour.js":"23","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\Tour\\styles.js":"24","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\Tours.js":"25","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\styles.js":"26","E:\\WWW\\tpservice\\client\\src\\components\\AssideMenu\\styles.js":"27","E:\\WWW\\tpservice\\client\\src\\components\\AssideMenu\\AssideMenu.js":"28","E:\\WWW\\tpservice\\client\\src\\hoc\\UserLayout\\styles.js":"29","E:\\WWW\\tpservice\\client\\src\\components\\AssideMenu\\ListItemComp\\ListItemComp.js":"30","E:\\WWW\\tpservice\\client\\src\\components\\AssideMenu\\ListItemComp\\styles.js":"31","E:\\WWW\\tpservice\\client\\src\\components\\PageTitle\\PageTitle.js":"32","E:\\WWW\\tpservice\\client\\src\\components\\PageTitle\\styles.js":"33","E:\\WWW\\tpservice\\client\\src\\pages\\UserSettings\\UserSettings.js":"34","E:\\WWW\\tpservice\\client\\src\\pages\\UserSettings\\styles.js":"35","E:\\WWW\\tpservice\\client\\src\\components\\SelectCountry\\SelectCountry.js":"36","E:\\WWW\\tpservice\\client\\src\\components\\SelectCountry\\styles.js":"37","E:\\WWW\\tpservice\\client\\src\\components\\RadioGender\\RadioGender.js":"38","E:\\WWW\\tpservice\\client\\src\\components\\RadioGender\\styles.js":"39","E:\\WWW\\tpservice\\client\\src\\components\\Switch\\Switch.js":"40","E:\\WWW\\tpservice\\client\\src\\components\\Switch\\styles.js":"41","E:\\WWW\\tpservice\\client\\src\\components\\Avatar\\Avatar.js":"42","E:\\WWW\\tpservice\\client\\src\\components\\Avatar\\styles.js":"43","E:\\WWW\\tpservice\\client\\src\\components\\UploadButton\\UploadButton.js":"44","E:\\WWW\\tpservice\\client\\src\\components\\UploadButton\\styles.js":"45","E:\\WWW\\tpservice\\client\\src\\pages\\UpdatePassword\\UpdatePassword.js":"46","E:\\WWW\\tpservice\\client\\src\\pages\\UpdatePassword\\styles.js":"47","E:\\WWW\\tpservice\\client\\src\\pages\\AdminUsers\\AdminUsers.js":"48","E:\\WWW\\tpservice\\client\\src\\components\\UserCard\\UserCard.js":"49","E:\\WWW\\tpservice\\client\\src\\components\\AdminPanel\\AdminPanel.js":"50","E:\\WWW\\tpservice\\client\\src\\components\\AdminPanel\\styles.js":"51","E:\\WWW\\tpservice\\client\\src\\pages\\AdminUsers\\styles.js":"52","E:\\WWW\\tpservice\\client\\src\\components\\UserCard\\styles.js":"53","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\user.js":"54","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\user.js":"55","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\getUsers.js":"56","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\getUsers.js":"57","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Admin_UpdateUser\\Admin_UpdateUser.js":"58","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Admin_UpdateUser\\style.js":"59","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Admin_UpdateUser\\StepperUpdate.js":"60","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Admin_UpdateUser\\StepperDelete.js":"61","E:\\WWW\\tpservice\\client\\src\\pages\\TourPage\\TourPage.js":"62","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\tours.js":"63","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\tours.js":"64","E:\\WWW\\tpservice\\client\\src\\pages\\TourPage\\styles.js":"65","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\TourPreorder\\TourPreorder.js":"66","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\TourPreorder\\styles.js":"67","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\Tour\\AdminTour.js":"68","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\AdminAddTour\\AdminAddTour.js":"69","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\AdminAddTour\\AdminAddTourStepper.js":"70","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\AdminAddTour\\styles.js":"71","E:\\WWW\\tpservice\\client\\src\\pages\\MainPage\\MainPage.js":"72","E:\\WWW\\tpservice\\client\\src\\pages\\MainPage\\styles.js":"73","E:\\WWW\\tpservice\\client\\src\\components\\Slider\\Slider.js":"74","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\booking.js":"75","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\booking.js":"76","E:\\WWW\\tpservice\\client\\src\\pages\\MyBookings\\MyBookings.js":"77","E:\\WWW\\tpservice\\client\\src\\components\\BookingCard\\BookingCard.js":"78","E:\\WWW\\tpservice\\client\\src\\components\\BookingCard\\styles.js":"79","E:\\WWW\\tpservice\\client\\src\\components\\Slider\\reviewSlider.js":"80","E:\\WWW\\tpservice\\client\\src\\components\\Slider\\styles.js":"81","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\AddReview\\Addreview.js":"82","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\rating.js":"83","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\rating.js":"84","E:\\WWW\\tpservice\\client\\src\\components\\Footer\\Footer.js":"85","E:\\WWW\\tpservice\\client\\src\\hoc\\MainLayout\\styles.js":"86","E:\\WWW\\tpservice\\client\\src\\components\\Footer\\styles.js":"87","E:\\WWW\\tpservice\\client\\src\\pages\\MyReviews\\MyReview.js":"88","E:\\WWW\\tpservice\\client\\src\\components\\ReviewCard\\ReviewCard.js":"89","E:\\WWW\\tpservice\\client\\src\\components\\ReviewCard\\styles.js":"90","E:\\WWW\\tpservice\\client\\src\\pages\\Dating\\DatingPage.js":"91","E:\\WWW\\tpservice\\client\\src\\pages\\Dating\\styles.js":"92","E:\\WWW\\tpservice\\client\\src\\components\\DatingCard\\DatingCard.js":"93","E:\\WWW\\tpservice\\client\\src\\components\\DatingCard\\Styles.js":"94"},{"size":687,"mtime":1613245180652,"results":"95","hashOfConfig":"96"},{"size":376,"mtime":1614443423957,"results":"97","hashOfConfig":"96"},{"size":671,"mtime":1612035366701,"results":"98","hashOfConfig":"96"},{"size":2139,"mtime":1614851602548,"results":"99","hashOfConfig":"96"},{"size":2213,"mtime":1612035385947,"results":"100","hashOfConfig":"96"},{"size":1973,"mtime":1615414949665,"results":"101","hashOfConfig":"96"},{"size":429,"mtime":1614450637334,"results":"102","hashOfConfig":"96"},{"size":4941,"mtime":1614717680250,"results":"103","hashOfConfig":"96"},{"size":305,"mtime":1611918100323,"results":"104","hashOfConfig":"96"},{"size":2225,"mtime":1614440955830,"results":"105","hashOfConfig":"96"},{"size":3481,"mtime":1614850648958,"results":"106","hashOfConfig":"96"},{"size":465,"mtime":1611920812647,"results":"107","hashOfConfig":"108"},{"size":5936,"mtime":1612572243500,"results":"109","hashOfConfig":"96"},{"size":1394,"mtime":1613152829549,"results":"110","hashOfConfig":"96"},{"size":177,"mtime":1611932621892,"results":"111","hashOfConfig":"96"},{"size":360,"mtime":1611934217359,"results":"112","hashOfConfig":"96"},{"size":1815,"mtime":1611934744053,"results":"113","hashOfConfig":"96"},{"size":0,"mtime":1611934415511,"results":"114","hashOfConfig":"96"},{"size":851,"mtime":1612023639491,"results":"115","hashOfConfig":"96"},{"size":402,"mtime":1611965099747,"results":"116","hashOfConfig":"96"},{"size":307,"mtime":1612015326150,"results":"117","hashOfConfig":"96"},{"size":2691,"mtime":1614851059359,"results":"118","hashOfConfig":"96"},{"size":6817,"mtime":1613514305108,"results":"119","hashOfConfig":"96"},{"size":1619,"mtime":1613140558004,"results":"120","hashOfConfig":"96"},{"size":717,"mtime":1612643926756,"results":"121","hashOfConfig":"96"},{"size":156,"mtime":1612130702962,"results":"122","hashOfConfig":"96"},{"size":520,"mtime":1612364244066,"results":"123","hashOfConfig":"108"},{"size":1869,"mtime":1612364127867,"results":"124","hashOfConfig":"108"},{"size":370,"mtime":1612371215240,"results":"125","hashOfConfig":"96"},{"size":666,"mtime":1612129536590,"results":"126","hashOfConfig":"108"},{"size":185,"mtime":1612126902421,"results":"127","hashOfConfig":"108"},{"size":353,"mtime":1612173234274,"results":"128","hashOfConfig":"108"},{"size":340,"mtime":1612174147816,"results":"129","hashOfConfig":"108"},{"size":5457,"mtime":1613419288117,"results":"130","hashOfConfig":"96"},{"size":144,"mtime":1612212529510,"results":"131","hashOfConfig":"96"},{"size":4853,"mtime":1612480052335,"results":"132","hashOfConfig":"96"},{"size":228,"mtime":1612199912139,"results":"133","hashOfConfig":"96"},{"size":959,"mtime":1612203911797,"results":"134","hashOfConfig":"96"},{"size":263,"mtime":1612202822461,"results":"135","hashOfConfig":"96"},{"size":701,"mtime":1612482004833,"results":"136","hashOfConfig":"96"},{"size":217,"mtime":1612481561069,"results":"137","hashOfConfig":"96"},{"size":1535,"mtime":1612389575117,"results":"138","hashOfConfig":"96"},{"size":1014,"mtime":1612389675163,"results":"139","hashOfConfig":"96"},{"size":1681,"mtime":1613154127964,"results":"140","hashOfConfig":"96"},{"size":219,"mtime":1612207633303,"results":"141","hashOfConfig":"96"},{"size":3166,"mtime":1612571869847,"results":"142","hashOfConfig":"96"},{"size":142,"mtime":1612355295197,"results":"143","hashOfConfig":"96"},{"size":830,"mtime":1613137168964,"results":"144","hashOfConfig":"96"},{"size":7134,"mtime":1613420324176,"results":"145","hashOfConfig":"96"},{"size":3425,"mtime":1613158354960,"results":"146","hashOfConfig":"96"},{"size":500,"mtime":1612610714528,"results":"147","hashOfConfig":"96"},{"size":312,"mtime":1612381928926,"results":"148","hashOfConfig":"96"},{"size":1573,"mtime":1612455816882,"results":"149","hashOfConfig":"96"},{"size":534,"mtime":1612445701827,"results":"150","hashOfConfig":"96"},{"size":1406,"mtime":1612569901013,"results":"151","hashOfConfig":"96"},{"size":1013,"mtime":1612570725260,"results":"152","hashOfConfig":"96"},{"size":2394,"mtime":1612621498646,"results":"153","hashOfConfig":"96"},{"size":1596,"mtime":1612573933363,"results":"154","hashOfConfig":"96"},{"size":929,"mtime":1612480369507,"results":"155","hashOfConfig":"96"},{"size":6568,"mtime":1613072355800,"results":"156","hashOfConfig":"96"},{"size":2335,"mtime":1612571772868,"results":"157","hashOfConfig":"96"},{"size":19681,"mtime":1614456404755,"results":"158","hashOfConfig":"96"},{"size":1035,"mtime":1613135683815,"results":"159","hashOfConfig":"96"},{"size":544,"mtime":1612722406969,"results":"160","hashOfConfig":"96"},{"size":2524,"mtime":1614456285361,"results":"161","hashOfConfig":"96"},{"size":7867,"mtime":1614444950711,"results":"162","hashOfConfig":"96"},{"size":635,"mtime":1614444880709,"results":"163","hashOfConfig":"96"},{"size":9154,"mtime":1613157359790,"results":"164","hashOfConfig":"96"},{"size":2131,"mtime":1613159517928,"results":"165","hashOfConfig":"96"},{"size":8605,"mtime":1613237259061,"results":"166","hashOfConfig":"96"},{"size":157,"mtime":1613160418549,"results":"167","hashOfConfig":"96"},{"size":227,"mtime":1613214313386,"results":"168","hashOfConfig":"96"},{"size":0,"mtime":1613213965525,"results":"169","hashOfConfig":"96"},{"size":3714,"mtime":1614454636710,"results":"170","hashOfConfig":"96"},{"size":1699,"mtime":1613332502642,"results":"171","hashOfConfig":"96"},{"size":898,"mtime":1613334668938,"results":"172","hashOfConfig":"96"},{"size":330,"mtime":1613335640636,"results":"173","hashOfConfig":"96"},{"size":9211,"mtime":1614723449259,"results":"174","hashOfConfig":"96"},{"size":190,"mtime":1613322259035,"results":"175","hashOfConfig":"96"},{"size":3738,"mtime":1614723913914,"results":"176","hashOfConfig":"96"},{"size":401,"mtime":1614723814692,"results":"177","hashOfConfig":"96"},{"size":3218,"mtime":1614444366027,"results":"178","hashOfConfig":"96"},{"size":1104,"mtime":1614721206706,"results":"179","hashOfConfig":"96"},{"size":591,"mtime":1614720932407,"results":"180","hashOfConfig":"96"},{"size":1731,"mtime":1614452770272,"results":"181","hashOfConfig":"96"},{"size":163,"mtime":1614449800510,"results":"182","hashOfConfig":"96"},{"size":226,"mtime":1614452787902,"results":"183","hashOfConfig":"96"},{"size":292,"mtime":1614718889754,"results":"184","hashOfConfig":"96"},{"size":3081,"mtime":1614850107695,"results":"185","hashOfConfig":"96"},{"size":319,"mtime":1614850300338,"results":"186","hashOfConfig":"96"},{"size":2909,"mtime":1615414511322,"results":"187","hashOfConfig":"96"},{"size":280,"mtime":1615410589286,"results":"188","hashOfConfig":"96"},{"size":7169,"mtime":1615412839713,"results":"189","hashOfConfig":"96"},{"size":957,"mtime":1615409408813,"results":"190","hashOfConfig":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"193","usedDeprecatedRules":"194"},"1i2bzh",{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"194"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"194"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"194"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"194"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"194"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"194"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ssihis",{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"194"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"194"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"194"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"194"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"194"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"194"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"194"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"260"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"194"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"194"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"194"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"194"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"194"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"194"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"194"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"194"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"194"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"194"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"194"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"194"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"194"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"194"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"194"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"194"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"194"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"194"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"194"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"194"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"194"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"194"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"194"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"194"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"194"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"194"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"194"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"194"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"194"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"194"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"194"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"194"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"194"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"194"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"194"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"194"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"194"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"194"},"E:\\WWW\\tpservice\\client\\src\\index.js",["434"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducers from './redux/reducers/index';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst midleware = [thunk];\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(... midleware))\n);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);",["435","436"],"E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\index.js",[],"E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\auth.js",["437"],"import {\r\n  AUTH,\r\n  LOGOUT,\r\n  USER_SIGNIN,\r\n  USER_SIGNUP,\r\n  AUTH_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH:\r\n      return { ...state, user: action?.payload.data.user };\r\n    case AUTH_FAIL:\r\n      return state;\r\n    case LOGOUT:\r\n      localStorage.clear();\r\n      return { ...state, user: null };\r\n    case USER_SIGNUP:\r\n      return { ...state, user: action?.payload.data };\r\n    case USER_SIGNIN:\r\n      console.log({ ...action?.payload.data });\r\n      return { ...state, user: action?.payload.data };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\WWW\\tpservice\\client\\src\\components\\App\\App.js",["438"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {auth} from '../../redux/actions/auth'\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport MainLayout from '../../hoc/MainLayout/MainLayout';\r\nimport UserLayout from '../../hoc/UserLayout/UserLayout';\r\nimport Alerts from '../Alert/Alert';\r\nimport Tours from '../Tours/Tours';\r\nimport UserSettings from '../../pages/UserSettings/UserSettings'\r\nimport UpdatePassword from '../../pages/UpdatePassword/UpdatePassword';\r\nimport AdminUsers from '../../pages/AdminUsers/AdminUsers'\r\nimport TourPage from '../../pages/TourPage/TourPage'\r\nimport MainPage from '../../pages/MainPage/MainPage'\r\nimport DatingPage from '../../pages/Dating/DatingPage'\r\n\r\n\r\n\r\nexport function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(auth());\r\n  }, [dispatch]);\r\n  return (\r\n    <div className='App'>\r\n      <MainLayout>\r\n        <Alerts />\r\n        <Switch>\r\n          <Route exact path='/' component={MainPage} />\r\n          <Route exact path='/dates' component={DatingPage} />\r\n          <Route exact path='/tours' component={Tours} />\r\n          <Route path='/tour' component={TourPage} />\r\n          {/* ================ USER PANEL LAYOUT-------------- */}\r\n          <Route\r\n            path='/me'\r\n            render={() => (\r\n              <UserLayout>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path='/me/settings'\r\n                    component={() => <UserSettings />}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path='/me/updatePassword'\r\n                    component={() => <UpdatePassword />}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path='/me/users'\r\n                    component={() => <AdminUsers />}\r\n                  />\r\n                </Switch>\r\n              </UserLayout>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </MainLayout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(App);","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\auth.js",[],"E:\\WWW\\tpservice\\client\\src\\api\\index.js",[],"E:\\WWW\\tpservice\\client\\src\\hoc\\MainLayout\\MainLayout.js",["439"],"import React from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport Footer from '../../components/Footer/Footer'\r\nimport makeStyles from './styles'\r\n\r\nexport default function MainLayout(props) {\r\n  return (\r\n    <div className='MainLayout'>\r\n      <div className='SiteContent'>\r\n        <Header />\r\n        <main className='Main'>{props.children}</main>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\hoc\\UserLayout\\UserLayout.js",["440"],"import React, {useEffect,useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport makeStyles from './styles';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  Box,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport AccountBalanceWalletOutlinedIcon from '@material-ui/icons/AccountBalanceWalletOutlined';\r\nimport RateReviewOutlinedIcon from '@material-ui/icons/RateReviewOutlined';\r\nimport UserSettings from '../../pages/UserSettings/UserSettings';\r\nimport UpdatePassword from '../../pages/UpdatePassword/UpdatePassword';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport CollectionsOutlinedIcon from '@material-ui/icons/CollectionsOutlined';\r\nimport AdminUsers from '../../pages/AdminUsers/AdminUsers'\r\nimport AdminTour from '../../components/Tours/Tour/AdminTour'\r\nimport MyBookings from '../../pages/MyBookings/MyBookings'\r\nimport AdminPanel from '../../components/AdminPanel/AdminPanel'\r\nimport MyReview from '../../pages/MyReviews/MyReview'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component='span' >{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function UserLayout() {\r\n  const classes = makeStyles();\r\n  const [value, setValue] = useState(0);\r\n  const userData = useSelector((state) => state.auth);\r\n  console.log(userData.user);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' color='default'>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant='scrollable'\r\n          scrollButtons='on'\r\n          indicatorColor='primary'\r\n          textColor='primary'\r\n          aria-label='scrollable force tabs example'\r\n        >\r\n          <Tab\r\n            label='My Settings'\r\n            icon={<SettingsOutlinedIcon />}\r\n            {...a11yProps(0)}\r\n          />\r\n          <Tab\r\n            label='My Password'\r\n            icon={<LockOpenOutlinedIcon />}\r\n            {...a11yProps(1)}\r\n          />\r\n          <Tab\r\n            label='My Bookings'\r\n            icon={<AccountBalanceWalletOutlinedIcon />}\r\n            {...a11yProps(2)}\r\n          />\r\n          <Tab\r\n            label='My Reviews'\r\n            icon={<RateReviewOutlinedIcon />}\r\n            {...a11yProps(3)}\r\n          />\r\n\r\n          {userData?.user?.role === 'admin'\r\n            ? [\r\n                [\r\n                  <Tab\r\n                    label='Users'\r\n                    icon={\r\n                      <PeopleAltOutlinedIcon className={classes.AdminIcon} />\r\n                    }\r\n                    {...a11yProps(4)}\r\n                  />,\r\n                ],\r\n                [\r\n                  <Tab\r\n                    label='Tours'\r\n                    icon={\r\n                      <CollectionsOutlinedIcon className={classes.AdminIcon} />\r\n                    }\r\n                    {...a11yProps(5)}\r\n                  />,\r\n                ],\r\n                [\r\n                  <Tab\r\n                    label='Bookings'\r\n                    icon={\r\n                      <AccountBalanceWalletOutlinedIcon\r\n                        className={classes.AdminIcon}\r\n                      />\r\n                    }\r\n                    {...a11yProps(6)}\r\n                  />,\r\n                ],\r\n              ]\r\n            : null}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel className={classes.TabPanel} value={value} index={0}>\r\n        <UserSettings />\r\n      </TabPanel>\r\n      <TabPanel className={classes.TabPanel} value={value} index={1}>\r\n        <UpdatePassword />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <MyBookings/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <MyReview/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <AdminPanel users />\r\n        <AdminUsers />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        <AdminPanel tours />\r\n        <AdminTour />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        Item Seven\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Header\\Header.js",["441","442"],"import React from 'react';\r\n\r\nimport{Link} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NavBar from '../NavBar/NavBar'\r\nimport './Header.scss';\r\n\r\nexport default function Header() {\r\n  const classes = makeStyles();\r\n  return (\r\n    <NavBar/>\r\n  )\r\n    \r\n  \r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\types.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\NavBar\\NavBar.js",["443","444","445","446"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { NavLink, useHistory, useLocation } from 'react-router-dom';\r\nimport MaiMenu from '../MainMenu/MainMenu';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { auth } from '../../redux/actions/auth';\r\nimport { logout } from '../../redux/actions/auth';\r\nimport ImageAvatar from '../Avatar/Avatar';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Typography,\r\n  // Avatar,\r\n  IconButton,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport Login from '../PopUp/Login/Login';\r\n\r\nimport './Navbar.scss';\r\n// import makeStyles from './styles'\r\n\r\nexport const NavBar = (props) => {\r\n  // const classes = makeStyles();\r\n  const [user, setUser] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n      setUser(props.user.user);\r\n    \r\n  },[props]);\r\n\r\n  // const handleClickOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  const logOut = (e) => {\r\n    e.preventDefault()\r\n    dispatch(logout());\r\n    setTimeout(()=>{\r\n      history.push('/');\r\n    },5000)\r\n    setUser(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <AppBar position='static' className='Navbar__wrapper'>\r\n      <Toolbar className='Navbar'>\r\n        {user ? (\r\n          <Fragment>\r\n            <MaiMenu />\r\n            {/* <NavLink to='/tours'>\r\n              <Button color='inherit'>Tours</Button>\r\n            </NavLink> */}\r\n            <NavLink to='/'>\r\n              <Typography variant='h6'>TPService</Typography>\r\n            </NavLink>\r\n            <div className='NavbarUser'>\r\n              <NavLink className='Navbaruser__link' to='/me'>\r\n                <Box display={{ xs: 'none', sm: 'block' }}>\r\n                  <Typography className='NavbarUser__name' variant='body2'>\r\n                    {user?.name?.split(' ')[0]}\r\n                  </Typography>\r\n                </Box>\r\n                <ImageAvatar\r\n                  // src={`http://localhost:5000/public/img/users/${user?.photo}`}\r\n                  src={`https://tpservice.herokuapp.com/public/img/users/${user?.photo}`}\r\n                  size='medium'\r\n                  flag\r\n                  flagsrc={\r\n                    user\r\n                      ? `https://tpservice.herokuapp.com/public/img/flags/${\r\n                          user?.country?.toLowerCase() + '.svg'\r\n                        }`\r\n                      : null\r\n                  }\r\n                />\r\n              </NavLink>\r\n              <IconButton color='inherit' onClick={logOut} size='medium'>\r\n                <ExitToAppOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            {/* <MaiMenu /> */}\r\n            <NavLink to='/tours'>\r\n              <Button color='inherit'>Tours</Button>\r\n            </NavLink>\r\n            <NavLink to='/'>\r\n              <Typography variant='h6'>TPService</Typography>\r\n            </NavLink>\r\n            <div className='NavbarUser'>\r\n              <Login />\r\n              {/* <Button color='inherit'>Sign Up</Button> */}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","E:\\WWW\\tpservice\\client\\src\\components\\NavBar\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Login\\Login.js",["447","448","449","450"],"import React, { Fragment, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useDispatch, connect } from 'react-redux';\r\nimport { signin, signup } from '../../../redux/actions/auth';\r\nimport { setAlert } from '../../../redux/actions/alert';\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Send } from '@material-ui/icons';\r\nimport Input from '../../Input/Input';\r\nimport ForgotPassword from '../ForgotPassword/ForgotPassword';\r\nimport makeStyles from './styles';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  phone: '',\r\n  email: '',\r\n  password: '',\r\n  passwordConfirm: '',\r\n};\r\n\r\nexport function Login(props) {\r\n  const classes = makeStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleShowPassword = () =>\r\n    setShowPassword((prevShowPassword) => !prevShowPassword);\r\n\r\n  const switchMode = () => {\r\n    setIsSignUp((prevIsSignUp) => !prevIsSignUp);\r\n    console.log(formData);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // const responseGoogle = async (res) => {\r\n  //   const result = res?.profileObj;\r\n  //   const token = res?.tokenId;\r\n  //   try {\r\n  //     dispatch({ type: 'ISUSER_SUCCESS', data: { result, token } });\r\n  //     setOpen(false);\r\n  //     history.push('/');\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    if (isSignUp) {\r\n      if (formData.password !== formData.passwordConfirm) {\r\n        dispatch(setAlert('Passwords do not match!!', 'error'));\r\n      } else {\r\n        dispatch(signup(formData, setOpen));\r\n      }\r\n    } else {\r\n      dispatch(signin(formData, setOpen));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color='inherit' onClick={handleClickOpen}>\r\n        Log In\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='form-dialog-title'\r\n      >\r\n        <DialogTitle id='form-dialog-title'>\r\n          {isSignUp ? 'Sign Up Form' : 'Sign In Form'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText className={classes.DialogContent}>\r\n            {isSignUp\r\n              ? 'To Sign up Please fill the form with your information'\r\n              : 'To Sign In to this website, please enter your email address here.'}\r\n          </DialogContentText>\r\n          {isSignUp ? (\r\n            <Fragment>\r\n              <Input\r\n                name='name'\r\n                label='Your Name '\r\n                type='text'\r\n                handleChange={handleChange}\r\n                autofocus\r\n              />\r\n              <Input\r\n                name='email'\r\n                label='Email Address '\r\n                type='email'\r\n                handleChange={handleChange}\r\n                autofocus\r\n              />\r\n              <Input\r\n                name='phone'\r\n                label='Your Phone Number'\r\n                handleChange={handleChange}\r\n                type='phone'\r\n              />\r\n              <Input\r\n                name='password'\r\n                label='Password'\r\n                handleChange={handleChange}\r\n                type={showPassword ? 'text' : 'password'}\r\n                handleShowPassword={handleShowPassword}\r\n              />\r\n              <Input\r\n                name='passwordConfirm'\r\n                label='Password Confirm'\r\n                handleChange={handleChange}\r\n                type={showPassword ? 'text' : 'password'}\r\n                handleShowPassword={handleShowPassword}\r\n              />\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Input\r\n                name='email'\r\n                label='Email Address '\r\n                type='email'\r\n                handleChange={handleChange}\r\n                autofocus\r\n              />\r\n              <Input\r\n                name='password'\r\n                label='Password'\r\n                handleChange={handleChange}\r\n                type={showPassword ? 'text' : 'password'}\r\n                handleShowPassword={handleShowPassword}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogFooter}>\r\n          {/* <GoogleLogin\r\n            clientId='762268263885-mv9eqto1qh5bj5ees7404mt5jfsb5n1m.apps.googleusercontent.com'\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n          /> */}\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.button}\r\n            endIcon={<Send />}\r\n            onClick={handleSubmit}\r\n          >\r\n            {isSignUp ? 'Sign Up' : 'Sign In'}\r\n          </Button>\r\n          {!isSignUp && (\r\n            <NavLink to='/forgotPassword'>\r\n              <Typography variant='body2'>Forgot Password?</Typography>\r\n              {/* <ForgotPassword/> */}\r\n            </NavLink>\r\n          )}\r\n        </DialogActions>\r\n        <Grid item>\r\n          <Button onClick={switchMode} fullWidth>\r\n            {isSignUp\r\n              ? 'Already have an account? Sign In'\r\n              : 'Dont have an account? Sign up'}\r\n          </Button>\r\n        </Grid>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Input\\Input.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\Input\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Login\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\ForgotPassword\\ForgotPassword.js",["451","452","453","454"],"import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Send } from '@material-ui/icons';\r\nimport Input from '../../Input/Input';\r\nimport makeStyles from './styles';\r\n\r\nexport default function Login(props) {\r\n  const classes = makeStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleChange = () => {};\r\n\r\n  const handleSubmit = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <Button color='inherit' onClick={handleClickOpen}>\r\n        Forgot password ? \r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='form-dialog-title'\r\n      >\r\n        <DialogTitle id='form-dialog-title'>Forgot Password</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText className={classes.DialogContent}>\r\n            To Reset your password, please type you Email address. We will send you Email with reset password Token.\r\n          </DialogContentText>\r\n          <Input\r\n            name='email'\r\n            label='Email Address '\r\n            type='email'\r\n            handleChange={handleChange}\r\n            autofocus\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classes.dialogFooter}>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.button}\r\n            endIcon={<Send />}\r\n            onClick={handleClose}\r\n          >\r\n            Send Email\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\ForgotPassword\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\Alert\\Alert.js",["455","456","457"],"import React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n}\r\n\r\nexport const Alerts = (props) => {\r\n \r\n  const [open, setOpen] = useState(true);\r\n  const { alerts } = props;\r\n\r\n  return (\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map((alert) => (\r\n      <Snackbar\r\n        key={alert.id}\r\n        open={open}\r\n      >\r\n        <Alert severity={alert.alertType}>\r\n          {alert.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n    ))\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps)(Alerts);\r\n","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\alert.js",["458"],"import {\r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n} from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default (state= initialState,action)=>{\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      console.log( action.payload);\r\n      return [...state,action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert=> alert.id !== action.payload)\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\alert.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\MainMenu\\MainMenu.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\Tours\\Tour\\Tour.js",["459","460","461"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport AssistantPhotoOutlinedIcon from '@material-ui/icons/AssistantPhotoOutlined';\r\nimport AlarmOutlinedIcon from '@material-ui/icons/AlarmOutlined';\r\nimport EuroSymbolOutlinedIcon from '@material-ui/icons/EuroSymbolOutlined';\r\nimport makeStyles from './styles';\r\n\r\nexport default function Tour() {\r\n  const classes = makeStyles();\r\n  const dispatch = useDispatch();\r\n  const [toursData, setToursData] = useState();\r\n  const tours = useSelector((state) => state.tours.tours);\r\n\r\n  useEffect(() => {\r\n    setToursData(tours);\r\n  }, [tours]);\r\n\r\n  const getClosestDate = (arr) => {\r\n    const now = new Date();\r\n    let closest = Infinity;\r\n    arr.forEach(function (d) {\r\n      const date = new Date(d.date);\r\n\r\n      if (date >= now && (date < new Date(closest) || date < closest)) {\r\n        closest = d.date;\r\n      }\r\n    });\r\n    const closestDate = closest;\r\n\r\n    return closestDate;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {toursData &&\r\n        toursData.map((tour) => (\r\n          <Grid item xs={12} sm={6} md={4} key={tour._id}>\r\n            <Card className={classes.root}>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image='https://www.meissl.com/media/images/8f24db1f/schweiz.jpg'\r\n                title={tour.name}\r\n              />\r\n              <CardContent className={classes.CardContent}>\r\n                <Box\r\n                  className={classes.Rating}\r\n                  display='flex'\r\n                  borderColor='transparent'\r\n                >\r\n                  <Typography\r\n                    component='span'\r\n                    variant='body2'\r\n                  >{`(${tour?.ratingQuantity})`}</Typography>\r\n                  <Rating\r\n                    className={classes.RatingStars}\r\n                    name='half-rating-read'\r\n                    defaultValue={tour.ratingAvarage}\r\n                    precision={0.5}\r\n                    readOnly\r\n                  />\r\n                </Box>\r\n                <Typography\r\n                  className={classes.tourName}\r\n                  gutterBottom\r\n                  variant='h5'\r\n                  component='h2'\r\n                >\r\n                  {tour.name}\r\n                </Typography>\r\n                <Box my={0.8}>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'\r\n                  >\r\n                    {tour.summary}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <div className={classes.card__row}>\r\n                  <ListItem className={classes.ListItem}>\r\n                    <ListItemAvatar className={classes.ListItemAvatar}>\r\n                      <Avatar className={classes.Avatar}>\r\n                        <DateRangeOutlinedIcon className={classes.Icon} />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <Typography className={classes.Typography} variant='body2'>\r\n                      {moment(getClosestDate(tour.startDates)).format(\r\n                        'DD MMMM YYYY'\r\n                      )}\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem className={classes.ListItem}>\r\n                    <ListItemAvatar className={classes.ListItemAvatar}>\r\n                      <Avatar className={classes.Avatar}>\r\n                        <AssistantPhotoOutlinedIcon className={classes.Icon} />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <Typography className={classes.Typography} variant='body2'>\r\n                      {tour.startLocation.description}\r\n                    </Typography>\r\n                  </ListItem>\r\n                </div>\r\n                <div className={classes.card__row}>\r\n                  <ListItem className={classes.ListItem}>\r\n                    <ListItemAvatar className={classes.ListItemAvatar}>\r\n                      <Avatar className={classes.Avatar}>\r\n                        <AlarmOutlinedIcon className={classes.Icon} />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <Typography className={classes.Typography} variant='body2'>\r\n                      {tour.duration} Day <span>Tour</span>\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem className={classes.ListItem}>\r\n                    <ListItemAvatar className={classes.ListItemAvatar}>\r\n                      <Avatar className={classes.Avatar}>\r\n                        <PeopleAltOutlinedIcon className={classes.Icon} />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <Typography className={classes.Typography} variant='body2'>\r\n                      {tour.maxGroupSize} <span>people/group</span>\r\n                    </Typography>\r\n                  </ListItem>\r\n                </div>\r\n              </CardContent>\r\n\r\n              <CardActions className={classes.cardFooter}>\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/tour/${tour.slug}`,\r\n                    state: { id: tour._id },\r\n                  }}\r\n                >\r\n                  <Button size='small' color='primary' variant='contained'>\r\n                    Learn More\r\n                  </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                  <ListItem className={classes.ListItemPrice}>\r\n                    <ListItemAvatar className={classes.ListItemAvatarPrice}>\r\n                      <EuroSymbolOutlinedIcon className={classes.euroIcon} />\r\n                    </ListItemAvatar>\r\n                    <Typography\r\n                      className={classes.TypographyPrice}\r\n                      variant='body2'\r\n                    >\r\n                      {tour.price}{' '}\r\n                      <span className={classes.TypographyPriceSpan}>\r\n                        per/person\r\n                      </span>\r\n                    </Typography>\r\n                  </ListItem>\r\n                </Box>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </Fragment>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\Tour\\styles.js",["462"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 350,\r\n  },\r\n  media: {\r\n    height: 170,\r\n  },\r\n  CardContent: {\r\n    position: 'relative',\r\n  },\r\n  Rating: {\r\n    position: 'absolute',\r\n    right: 10,\r\n    top: 7,\r\n  },\r\n  RatingStars: {\r\n    fontSize: 16,\r\n  },\r\n  card__row: {\r\n    display: 'flex',\r\n  },\r\n  ListItem: {\r\n    fontSize: 10,\r\n  },\r\n  Avatar: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  Icon: {\r\n    width: '0.6em',\r\n    height: '0.6em',\r\n  },\r\n  ListItemAvatar: {\r\n    minWidth: 30,\r\n  },\r\n  Typography: {\r\n    fontSize: '0.8em',\r\n    fontWeight: 600,\r\n  },\r\n  ListItem: {\r\n    padding: '7px 12px',\r\n  },\r\n  ListItemPrice: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingRight: 5,\r\n  },\r\n  cardFooter: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingBottom: 10,\r\n    backgroundColor: theme.palette.info.light,\r\n    paddingLeft: 16,\r\n    paddingRight: 5,\r\n  },\r\n  euroIcon: {\r\n    fontSize: 18,\r\n    display: 'flex',\r\n  },\r\n  TypographyPrice: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n  },\r\n  ListItemAvatarPrice: {\r\n    minWidth: 16,\r\n  },\r\n  TypographyPriceSpan: {\r\n    fontSize: 9,\r\n    fontWeight: 500,\r\n    color: '#636e72',\r\n    textTransform: 'uppercase',\r\n  },\r\n  tourName: {\r\n    fontWeight: 600,\r\n  },\r\n  AdminTours_container: {\r\n    marginTop: 20,\r\n  },\r\n  adminHeaderCell: {\r\n    fontSize: '10px',\r\n    padding: 5,\r\n    textAlign: 'center',\r\n  },\r\n  adminCell: {\r\n    fontSize: '0.8em',\r\n    padding: 5,\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\Tours.js",["463","464","465"],"import React,{useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Tour from './Tour/Tour';\r\nimport {Container, Grid} from '@material-ui/core'\r\nimport {getAllTours} from '../../redux/actions/tours'\r\n\r\nimport makeStyles from './styles';\r\nfunction Tours(props) {\r\n  const classes = makeStyles();\r\n  const dispatch = useDispatch();\r\n  const tours = useSelector((state)=> state.tours.tours)\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllTours());\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid container justify='space-between' alignItems='stretch' spacing={3}>\r\n        <Tour/>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Tours\r\n\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\AssideMenu\\styles.js",[],["466","467"],"E:\\WWW\\tpservice\\client\\src\\components\\AssideMenu\\AssideMenu.js",[],"E:\\WWW\\tpservice\\client\\src\\hoc\\UserLayout\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\AssideMenu\\ListItemComp\\ListItemComp.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\AssideMenu\\ListItemComp\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\PageTitle\\PageTitle.js",["468"],"import React from 'react'\r\nimport {Typography,Grid,Container} from '@material-ui/core'\r\nimport makeStyles from './styles';\r\n\r\nexport  const PageTitle =(props) =>{\r\n  const classes = makeStyles();\r\n  return (\r\n    <Container>\r\n      <Typography className={classes.root}>{props.children}</Typography>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PageTitle;","E:\\WWW\\tpservice\\client\\src\\components\\PageTitle\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\pages\\UserSettings\\UserSettings.js",[],"E:\\WWW\\tpservice\\client\\src\\pages\\UserSettings\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\SelectCountry\\SelectCountry.js",["469"],"/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {Grid} from '@material-ui/core'\r\nimport makeStyles from './styles';\r\n\r\n\r\n\r\n\r\n\r\nexport default function SelectCountry({ half, value, handleChange, onInputChange }) {\r\n  const classes = makeStyles();\r\n\r\n  // const [value, setValue] = React.useState(countries[3]);\r\n  // const [inputValue, setInputValue] = React.useState('');\r\n\r\n  return (\r\n    <Grid item xs={12} sm={half ? 6 : 12} md={half ? 4 : 6}>\r\n\r\n        <Autocomplete\r\n          value={value}\r\n          onChange={handleChange}\r\n          // inputValue={value}\r\n          onInputChange={onInputChange}\r\n          id='country'\r\n          options={countries}\r\n          // style={{ width: 300 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label='Your country:'\r\n              name='country'\r\n              variant='outlined'\r\n              margin='dense'\r\n            />\r\n          )}\r\n        />\r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst countries = [\r\n\r\n'Abkhazia',\r\n'Aland-islands',\r\n'Albania',\r\n'Algeria',\r\n'Afghanistan',\r\n'American-samoa',\r\n'Andorra',\r\n'Angola',\r\n'Anguilla',\r\n'Antigua-and-barbuda',\r\n'Argentina',\r\n'Armenia',\r\n'Aruba',\r\n'Australia',\r\n'Austria',\r\n'Azerbaijan',\r\n'Azores-islands',\r\n'Bahamas',\r\n'Bahrain',\r\n'Balearic-islands',\r\n'Bangladesh',\r\n'Barbados',\r\n'Basque-country',\r\n'Belarus',\r\n'Belgium',\r\n'Belize',\r\n'Benin',\r\n'Bermuda',\r\n'Bhutan',\r\n'Bolivia',\r\n'Botswana',\r\n'Brazil',\r\n'Bonaire',\r\n'Bosnia-and-herzegovina',\r\n'British-indian-ocean-territory',\r\n'British-virgin-islands',\r\n'Brunei',\r\n'Burkina-faso',\r\n'Bulgaria',\r\n'Burundi',\r\n'Cambodia',\r\n'Cameroon',\r\n'Canada',\r\n'Canary-islands',\r\n'Cape-verde',\r\n'Cayman-islands',\r\n'Central-african-republic',\r\n'Ceuta',\r\n'Chad',\r\n'Chile',\r\n'Christmas-island',\r\n'Cocos-island',\r\n'British-columbia',\r\n'Colombia',\r\n'Cook-islands',\r\n'China',\r\n'Corsica',\r\n'Costa-rica',\r\n'Croatia',\r\n'Cuba',\r\n'Comoros',\r\n'Czech-republic',\r\n'Democratic-republic-of-congo',\r\n'Denmark',\r\n'Djibouti',\r\n'Curacao',\r\n'Dominica',\r\n'Dominican-republic',\r\n'East-timor',\r\n'Ecuador',\r\n'Egypt',\r\n'El-salvador',\r\n'England',\r\n'Equatorial-guinea',\r\n'Eritrea',\r\n'Estonia',\r\n'Ethiopia',\r\n'European-union',\r\n'Falkland-islands',\r\n'Fiji',\r\n'Finland',\r\n'France',\r\n'French-polynesia',\r\n'Gabon',\r\n'Galapagos-islands',\r\n'Gambia',\r\n'Georgia',\r\n'Germany',\r\n'Ghana',\r\n'Gibraltar',\r\n'Greece',\r\n'Greenland',\r\n'Grenada',\r\n'Guam',\r\n'Guatemala',\r\n'Guernsey',\r\n'Guinea-bissau',\r\n'Guinea',\r\n'Haiti',\r\n'Hawaii',\r\n'Honduras',\r\n'Hong-kong',\r\n'Hungary',\r\n'Iceland',\r\n'India',\r\n'Indonesia',\r\n'Iran',\r\n'Iraq',\r\n'Ireland',\r\n'Isle-of-man',\r\n'Israel',\r\n'Italy',\r\n'Ivory-coast',\r\n'Jamaica',\r\n'Japan',\r\n'Jersey',\r\n'Jordan',\r\n'Kazakhstan',\r\n'Kenya',\r\n'Kiribati',\r\n'Kosovo',\r\n'Kwait',\r\n'Kyrgyzstan',\r\n'Laos',\r\n'Latvia',\r\n'Lebanon',\r\n'Lesotho',\r\n'Liberia',\r\n'Libya',\r\n'Liechtenstein',\r\n'Lithuania',\r\n'Luxembourg',\r\n'Macao',\r\n'Madagascar',\r\n'Madeira',\r\n'Malasya',\r\n'Malawi',\r\n'Maldives',\r\n'Mali',\r\n'Malta',\r\n'Marshall-island',\r\n'Martinique',\r\n'Mauritania',\r\n'Mauritius',\r\n'Melilla',\r\n'Mexico',\r\n'Micronesia',\r\n'Moldova',\r\n'Monaco',\r\n'Mongolia',\r\n'Montenegro',\r\n'Montserrat',\r\n'Morocco',\r\n'Mozambique',\r\n'Myanmar',\r\n'Namibia',\r\n'Nato',\r\n'Nauru',\r\n'Nepal',\r\n'Netherlands',\r\n'New-zealand',\r\n'Nicaragua',\r\n'Niger',\r\n'Nigeria',\r\n'Niue',\r\n'Norfolk-island',\r\n'North-korea',\r\n'Northern-cyprus',\r\n'Northern-marianas-islands',\r\n'Norway',\r\n'Oman',\r\n'Ossetia',\r\n'Pakistan',\r\n'Palau',\r\n'Palestine',\r\n'Panama',\r\n'Papua-new-guinea',\r\n'Paraguay',\r\n'Peru',\r\n'Philippines',\r\n'Pitcairn-islands',\r\n'Poland',\r\n'Portugal',\r\n'Puerto-rico',\r\n'Qatar',\r\n'Rapa-nui',\r\n'Republic-of-macedonia',\r\n'Republic-of-the-congo',\r\n'Romania',\r\n'Russia',\r\n'Rwanda',\r\n'Saba-island',\r\n'Sahrawi-arab-democratic-republic',\r\n'Saint-kitts-and-nevis',\r\n'Samoa',\r\n'San-marino',\r\n'Sao-tome-and-prince',\r\n'Sardinia',\r\n'Saudi-arabia',\r\n'Scotland',\r\n'Senegal',\r\n'Serbia',\r\n'Seychelles',\r\n'Sicily',\r\n'Sierra-leone',\r\n'Singapore',\r\n'Sint-eustatius',\r\n'Sint-maarten',\r\n'Slovakia',\r\n'Slovenia',\r\n'Solomon-islands',\r\n'Somalia',\r\n'Somaliland',\r\n'South-africa',\r\n'South-korea',\r\n'South-sudan',\r\n'Spain',\r\n'Sri-lanka',\r\n'St-barts',\r\n'St-lucia',\r\n'St-vincent-and-the-grenadines',\r\n'Sudan',\r\n'Suriname',\r\n'Swaziland',\r\n'Sweden',\r\n'Switzerland',\r\n'Syria',\r\n'Taiwan',\r\n'Tajikistan',\r\n'Tanzania',\r\n'Thailand',\r\n'Tibet',\r\n'Togo',\r\n'Tokelau',\r\n'Tonga',\r\n'Transnistria',\r\n'Trinidad-and-tobago',\r\n'Tunisia',\r\n'Turkey',\r\n'Turkmenistan',\r\n'Turks-and-caicos',\r\n'Tuvalu-1',\r\n'Tuvalu',\r\n'Uganda',\r\n'Ukraine',\r\n'United-arab-emirates',\r\n'United-kingdom',\r\n'United-nations',\r\n'United-states',\r\n'Uruguay',\r\n'Uzbekistn',\r\n'Vanuatu',\r\n'Vatican-city',\r\n'Venezuela',\r\n'Vietnam',\r\n'Virgin-islands',\r\n'Wales',\r\n'Yemen',\r\n'Zambia',\r\n'Zimbabwe',\r\n\r\n];\r\n","E:\\WWW\\tpservice\\client\\src\\components\\SelectCountry\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\RadioGender\\RadioGender.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\RadioGender\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\Switch\\Switch.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\Switch\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\Avatar\\Avatar.js",["470"],"import React, { Fragment } from 'react';\r\nimport {Avatar,Box} from '@material-ui/core';\r\nimport makeStyles from './styles';\r\n\r\nexport default function ImageAvatar({ src, alt, size, flag, flagsrc }) {\r\n  const classes = makeStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {size === 'small' && (\r\n        <Box className={classes.avatar_wrapper}>\r\n          <Avatar alt={alt} src={src} className={classes.small} />\r\n        </Box>\r\n      )}\r\n      {size === 'medium' && (\r\n        <Box className={classes.avatar_wrapper}>\r\n          <Avatar alt={alt} src={src} className={classes.medium} />\r\n          {flag && (\r\n            <Avatar\r\n              variant='square'\r\n              src={flagsrc}\r\n              className={classes.flag_medium}\r\n            />\r\n          )}\r\n        </Box>\r\n      )}\r\n      {size === 'large' && (\r\n        <Box className={classes.avatar_wrapper}>\r\n          <Avatar alt={alt} src={src} className={classes.large} />\r\n          {flag && (\r\n            <Avatar\r\n              variant='square'\r\n              src={flagsrc}\r\n              className={classes.flag_large}\r\n            />\r\n          )}\r\n        </Box>\r\n      )}\r\n      {size === 'xl' && (\r\n        <Box className={classes.avatar_wrapper}>\r\n          <Avatar alt={alt} src={src} className={classes.xl} />\r\n          {flag && (\r\n            <Avatar\r\n              variant='square'\r\n              src={flagsrc}\r\n              className={classes.flag_xl}\r\n            />\r\n          )}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Avatar\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\UploadButton\\UploadButton.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\UploadButton\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\pages\\UpdatePassword\\UpdatePassword.js",["471","472","473","474","475","476","477","478","479"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Grid, Box, Button } from '@material-ui/core';\r\nimport Input from '../../components/Input/Input';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SelectCountry from '../../components/SelectCountry/SelectCountry';\r\nimport RadioGender from '../../components/RadioGender/RadioGender';\r\nimport Switch from '../../components/Switch/Switch';\r\nimport Avatar from '../../components/Avatar/Avatar';\r\nimport UploadButton from '../../components/UploadButton/UploadButton';\r\nimport { passwordUpdate } from '../../redux/actions/user';\r\nimport makeStyles from './styles';\r\n\r\nexport const UpdatePassword = (props) => {\r\n  const classes = makeStyles();\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  // const userData = useSelector((state) => state.auth);\r\n  const [sendForm, setSendForm] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    passwordCurrent: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  // const [user, setUser] = useState(userData.user);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n  const handleShowPassword = (event) =>\r\n    setShowPassword((prevShowPassword) => !prevShowPassword);\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(passwordUpdate(formData));\r\n    setSendForm(true)\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      passwordCurrent: '',\r\n      password: '',\r\n      passwordConfirm: '',\r\n      country: '',\r\n    });\r\n  }, [sendForm]);\r\n\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <Input\r\n            name='passwordCurrent'\r\n            label='User Current Password:'\r\n            type='password'\r\n            handleChange={handleChange}\r\n            type={showPassword ? 'text' : 'password'}\r\n            handleShowPassword={handleShowPassword}\r\n            autofocus\r\n            small\r\n            value={formData.passwordCurrent}\r\n          />\r\n          <Input\r\n            name='password'\r\n            label='New Password:'\r\n            type='password'\r\n            handleChange={handleChange}\r\n            type={showPassword ? 'text' : 'password'}\r\n            handleShowPassword={handleShowPassword}\r\n            small\r\n            value={formData.password}\r\n          />\r\n          <Input\r\n            name='passwordConfirm'\r\n            label='Confirm Password:'\r\n            type='password'\r\n            value={formData.phone}\r\n            handleChange={handleChange}\r\n            small\r\n            value={formData.passwordConfirm}\r\n          />\r\n\r\n          <Grid container justify='center'>\r\n            <Box mt={5}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={onSubmitHandler}\r\n              >\r\n                Update Password\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n","E:\\WWW\\tpservice\\client\\src\\pages\\UpdatePassword\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\pages\\AdminUsers\\AdminUsers.js",["480","481","482","483"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UserCard from '../../components/UserCard/UserCard';\r\nimport AdminPanel from '../../components/AdminPanel/AdminPanel';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport makeStyles from './styles';\r\nimport { getUsers } from '../../redux/actions/getUsers';\r\n\r\nexport default function AdminUsers(props) {\r\n  const classes = makeStyles();\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.getUsers);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, [users?.updatedUser, users?.deletedUser]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container className={classes.Grid__container} spacing={3}>\r\n        <UserCard />\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\UserCard\\UserCard.js",["484","485","486","487","488","489","490"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Admin_UpdateUser from '../PopUp/Admin_UpdateUser/Admin_UpdateUser';\r\nimport StepperDelete from '../PopUp/Admin_UpdateUser/StepperDelete'\r\nimport moment from 'moment';\r\nimport makeStyles from './styles';\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Box,\r\n  CircularProgress,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Avatar,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\n\r\nimport ImageAvatar from '../Avatar/Avatar';\r\nimport EventAvailableOutlinedIcon from '@material-ui/icons/EventAvailableOutlined';\r\nimport EventBusyOutlinedIcon from '@material-ui/icons/EventBusyOutlined';\r\n\r\n\r\nexport const UserCard = (props) => {\r\n  const classes = makeStyles();\r\n  const [usersData, setUsersData] = useState();\r\n  const [loading, SetLoading] = useState(true);\r\n  const users = useSelector((state) => state.getUsers);\r\n\r\n  useEffect(() => {\r\n    setUsersData(users);\r\n    SetLoading(false);\r\n  }, [users]);\r\n\r\n\r\n  const Progress = () => (\r\n    <div className={classes.progress}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {usersData?.users?.map((user) => (\r\n        <Grid item xs={12} sm={6} md={4} key={user._id}>\r\n          <Box className={classes.root} boxShadow={3}>\r\n            {!user.active ? (\r\n              <EventBusyOutlinedIcon className={classes.unactive} />\r\n            ) : (\r\n              <EventAvailableOutlinedIcon className={classes.active} />\r\n            )}\r\n\r\n            <CardHeader\r\n              avatar={\r\n                <ImageAvatar\r\n                  size='medium'\r\n                  src={`https://tpservice.herokuapp.com/public/img/users/${user.photo}`}\r\n                  className={classes.avatar}\r\n                ></ImageAvatar>\r\n              }\r\n              title={<Typography variant='h6'>{user.name}</Typography>}\r\n              subheader={\r\n                <Typography variant='body2' color='textPrimary'>\r\n                  <span className={classes.subheader}>Last seen</span>\r\n                  {moment(user.lastLogIn).fromNow()}\r\n                </Typography>\r\n              }\r\n            />\r\n\r\n            <CardContent>\r\n              <Grid container justify='center' spacing={2}>\r\n                <TableContainer component={Paper}>\r\n                  <Table\r\n                    className={classes.table}\r\n                    size='small'\r\n                    aria-label='a dense table'\r\n                  >\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell className={classes.tableFirst}>\r\n                          Email:\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableSecond}>\r\n                          {user.email}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell className={classes.tableFirst}>\r\n                          Phone:\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableSecond}>\r\n                          {user.phone}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n\r\n                  <Table\r\n                    className={classes.table}\r\n                    size='small'\r\n                    aria-label='a dense table'\r\n                  >\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell className={classes.tableFirst}>\r\n                          Gender:\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableSecond}>\r\n                          {user.gender[0].toUpperCase() +\r\n                            user.gender.substring(1)}\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableFirst}>\r\n                          TP:\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableSecond}>\r\n                          {user.employerTp ? 'Yes' : 'No'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                  <Table\r\n                    className={classes.table}\r\n                    size='small'\r\n                    aria-label='a dense table'\r\n                  >\r\n                    <TableBody>\r\n                      <TableRow className={classes.TableRow}>\r\n                        <TableCell className={classes.tableFirst}>\r\n                          Country:\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableSecond}>\r\n                          {user.country}\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableSecond}>\r\n                          <Avatar\r\n                            className={classes.flag}\r\n                            variant='square'\r\n                            src={`https://tpservice.herokuapp.com/public/img/flags/${\r\n                              user?.country?.toLowerCase() + '.svg'\r\n                            }`}\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                  <Table\r\n                    className={classes.table}\r\n                    size='small'\r\n                    aria-label='a dense table'\r\n                  >\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell className={classes.tableFirst}>\r\n                          Bookings: //TODO\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableSecond}>\r\n                          10\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableFirst}>\r\n                          Reviews: //TODO\r\n                        </TableCell>\r\n                        <TableCell className={classes.tableSecond}>\r\n                          15\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            </CardContent>\r\n            <CardActions className={classes.CardActions}>\r\n              {/* <Button\r\n                className={classes.button}\r\n                variant='contained'\r\n                color='secondary'\r\n                size='medium'\r\n                startIcon={<DeleteOutlinedIcon />}\r\n              >\r\n                Delete\r\n              </Button> */}\r\n              <StepperDelete userID={user._id} />\r\n              <Admin_UpdateUser userID={user._id} />\r\n            </CardActions>\r\n          </Box>\r\n        </Grid>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","E:\\WWW\\tpservice\\client\\src\\components\\AdminPanel\\AdminPanel.js",["491","492","493","494","495"],"import React,{useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport useStyles from './styles';\r\nimport {\r\n  Box,\r\n  Tooltip,\r\n  IconButton,\r\n  Paper,\r\n  Grid,\r\n  Container,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { AssignmentTurnedInOutlined } from '@material-ui/icons';\r\nimport {getActiveUsers} from '../../redux/actions/getUsers'\r\nimport AdminAddTour from '../../components/PopUp/AdminAddTour/AdminAddTour'\r\n\r\n\r\nexport default function AdminPanel({users, tours,open}) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const usersData = useSelector((state)=>state.getUsers);\r\n  const toursData = useSelector((state) => state.tours);\r\n\r\n  console.log(usersData);\r\n  console.log(toursData?.tours?.length);\r\n\r\nconst unActiveUsers = ()=>{\r\n  console.log('render UnAcive');\r\n}\r\nconst ActiveUsers = () => {\r\n  console.log('render Acive');\r\n  dispatch(getActiveUsers());\r\n};\r\nconst allUsers = ()=>{\r\n  console.log('All Users');\r\n}\r\n\r\n\r\nconst Active = (userData)=> usersData?.users?.filter((user)=>user.active).length\r\nconst UnActive = (userData)=> usersData?.users?.filter((user)=>!user.active).length\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Grid className={classes.root}>\r\n      <Paper elevation={3} className={classes.Paper}>\r\n        <Grid container justify='space-between'>\r\n          <Box display='flex'>\r\n            {' '}\r\n            {users && (\r\n              <Grid item>\r\n                <Tooltip title='Active Users' placement='top'>\r\n                  <IconButton size={'small'} onClick={ActiveUsers}>\r\n                    <AssignmentTurnedInOutlined />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            )}\r\n            {tours && (\r\n              <Grid item>\r\n                  <AdminAddTour />\r\n              </Grid>\r\n            )}\r\n            {users && (\r\n              <Grid item>\r\n                <Tooltip title='Active Users' placement='top'>\r\n                  <IconButton size={'small'} onClick={ActiveUsers}>\r\n                    <AssignmentTurnedInOutlined />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            )}\r\n            {users && (\r\n              <Grid item>\r\n                <Tooltip title='Active Users' placement='top'>\r\n                  <IconButton size={'small'} onClick={ActiveUsers}>\r\n                    <AssignmentTurnedInOutlined />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            )}\r\n          </Box>\r\n          <Box alignItems='center' justify='flex-end'>\r\n            <Grid item>\r\n              <Typography variant='body2' component='span'>\r\n                <Typography component='span' className={classes.total}>\r\n                  {users && usersData?.users?.length}\r\n                  {tours && toursData?.tours?.length}{' '}\r\n                </Typography>{' '}\r\n                <Typography\r\n                  component='span'\r\n                  color='secondary'\r\n                  className={classes.active}\r\n                >\r\n                  {users && Active()}{' '}\r\n                </Typography>{' '}\r\n                <Typography component='span' className={classes.unactive}>\r\n                  {users && UnActive()}\r\n                </Typography>\r\n              </Typography>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\AdminPanel\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\pages\\AdminUsers\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\UserCard\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\user.js",["496"],"import {\r\n  USERUPDATE__SUCCESS,\r\n  USERUPDATE__FAIL,\r\n  UPDATEPASS_SUCCESS,\r\n  UPDATEPASS_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERUPDATE__SUCCESS:\r\n      console.log(action);\r\n      return state;\r\n    case USERUPDATE__FAIL:\r\n      console.log(action);\r\n      return state;\r\n    case UPDATEPASS_SUCCESS:\r\n      return state;\r\n    case UPDATEPASS_FAIL:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\user.js",[],"E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\getUsers.js",["497"],"import {\r\n  USERS_DATA_SUCCES,\r\n  USERS_DATA_FAIL,\r\n  GET_USER_DATA_SUCCESS,\r\n  GET_USER_DATA_FAIL,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n  DELETE_USER_FAIL,\r\n  DELETE_USER_SUCCESS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERS_DATA_SUCCES:\r\n      return { ...state, users: action?.payload };\r\n    case USERS_DATA_FAIL:\r\n      return state;\r\n    case GET_USER_DATA_SUCCESS:\r\n      return { ...state, user: action?.payload };\r\n    case GET_USER_DATA_FAIL:\r\n      return { ...state, error: action?.payload };\r\n    case UPDATE_USER_SUCCESS:\r\n      return { ...state, updatedUser: action?.payload };\r\n    case UPDATE_USER_FAIL:\r\n      return { ...state, error: action?.payload };\r\n    case DELETE_USER_SUCCESS:\r\n      return { ...state, deletedUser: action?.payload };\r\n    case DELETE_USER_FAIL:\r\n      return { ...state, deleteUserFail: action?.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\getUsers.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Admin_UpdateUser\\Admin_UpdateUser.js",["498"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport StepperMComp from './StepperUpdate';\r\nimport makeStyles from './style';\r\nimport SyncOutlinedIcon from '@material-ui/icons/SyncAltOutlined';\r\nimport { getUserById } from '../../../redux/actions/getUsers';\r\n\r\nexport default function FormDialog(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [userId, setUserId] = useState('');\r\n  const classes = makeStyles();\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.getUsers);\r\n\r\n  const handleClickOpen = (props) => {\r\n    dispatch(getUserById(users.users, userId));\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    setUserId(props.userID);\r\n  }, [users]);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={handleClickOpen}\r\n        className={classes.button}\r\n        variant='contained'\r\n        color='primary'\r\n        size='medium'\r\n        startIcon={<SyncOutlinedIcon />}\r\n      >\r\n        Update\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        className={classes.root}\r\n        aria-labelledby='form-dialog-title'\r\n        fullWidth\r\n      >\r\n        <DialogTitle className={classes.Dialog__title}>Update User</DialogTitle>\r\n        <StepperMComp setClose={handleClose} />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Admin_UpdateUser\\style.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Admin_UpdateUser\\StepperUpdate.js",["499"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport makeStyles from './style';\r\nimport Input from '../../Input/Input';\r\nimport SelectCountry from '../../SelectCountry/SelectCountry';\r\nimport RadioGender from '../../RadioGender/RadioGender';\r\nimport SwitchComp from '../../Switch/Switch';\r\nimport { updateUserById } from '../../../redux/actions/getUsers';\r\n\r\nfunction getSteps() {\r\n  return [\r\n    'Information',\r\n    'Update User',\r\n    // 'Create an ad',\r\n  ];\r\n}\r\n\r\nexport const StepperMComp = (props) => {\r\n  const classes = makeStyles();\r\n  const userData = useSelector((state) => state.getUsers);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    country: '',\r\n    gender: '',\r\n    country: '',\r\n    employerTp: '',\r\n    active: '',\r\n  });\r\n  const steps = getSteps();\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    dispatch(updateUserById(user, userData?.user[0]?._id));\r\n    setTimeout(() => {\r\n      props.setClose();\r\n    }, 4000);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData?.user) {\r\n      setUser({\r\n        name: userData?.user[0]?.name,\r\n        phone: userData?.user[0]?.phone,\r\n        email: userData?.user[0]?.email,\r\n        gender: userData?.user[0]?.gender,\r\n        employerTp: userData?.user[0]?.employerTp,\r\n        country: userData?.user[0]?.country,\r\n        active: userData?.user[0]?.active,\r\n      });\r\n    }\r\n  }, [userData]);\r\n\r\n  function getStepContent(stepIndex) {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <Typography>\r\n            {' '}\r\n            Hehe will be text information about user update\r\n          </Typography>\r\n        );\r\n      case 1:\r\n        return (\r\n          <Container>\r\n            <form>\r\n              <Grid container justify='center' spacing={2}>\r\n                <Input\r\n                  name='name'\r\n                  label='User Name:'\r\n                  type='text'\r\n                  half\r\n                  handleChange={handleChange}\r\n                  autofocus\r\n                  value={user?.name}\r\n                />\r\n                <Input\r\n                  name='email'\r\n                  label='User Email:'\r\n                  type='email'\r\n                  half\r\n                  handleChange={handleChange}\r\n                  autofocus\r\n                  value={user?.email}\r\n                />\r\n                <Input\r\n                  name='phone'\r\n                  label='User Phone:'\r\n                  type='phone'\r\n                  half\r\n                  handleChange={handleChange}\r\n                  autofocus\r\n                  value={user?.phone}\r\n                />\r\n                <SelectCountry\r\n                  value={user?.country}\r\n                  handleChange={(event, newValue) => {\r\n                    setUser({ ...user, country: newValue });\r\n                  }}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    setUser({ ...user, country: newInputValue });\r\n                  }}\r\n                />\r\n                <RadioGender\r\n                  value1='female'\r\n                  value2='male'\r\n                  label1='Female'\r\n                  label2='Male'\r\n                  name='gender'\r\n                  labelName='gender'\r\n                  value={user?.gender}\r\n                  handleChange={handleChange}\r\n                />\r\n                <SwitchComp\r\n                  label='TP Employer'\r\n                  name='employerTp'\r\n                  handleChange={(event) => {\r\n                    setUser({\r\n                      ...user,\r\n                      employerTp: event.target.checked,\r\n                    });\r\n                  }}\r\n                  value={user?.employerTp}\r\n                  half\r\n                />\r\n                <SwitchComp\r\n                  label='User Active'\r\n                  name='employerTp'\r\n                  handleChange={(event) => {\r\n                    setUser({\r\n                      ...user,\r\n                      active: event.target.checked,\r\n                    });\r\n                  }}\r\n                  value={user?.active}\r\n                  half\r\n                />\r\n              </Grid>\r\n            </form>\r\n          </Container>\r\n        );\r\n      // case 2:\r\n      //   return 'This is the bit I really care about!';\r\n      default:\r\n        return 'Unknown stepIndex';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Stepper}>\r\n      <Stepper\r\n        className={classes.stepper__header}\r\n        activeStep={activeStep}\r\n        alternativeLabel\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography\r\n              component='div'\r\n              className={classes.instructions}\r\n            >\r\n              User has been updated!!\r\n            </Typography>\r\n            {/* <Button onClick={handleReset}>Reset</Button> */}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography component='span' className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={\r\n                  activeStep === steps.length - 1 ? handleSubmit : handleNext\r\n                }\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Update User' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default StepperMComp;\r\n","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\Admin_UpdateUser\\StepperDelete.js",["500","501","502"],"import React, {useState,useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport {deleteUserById} from '../../../redux/actions/getUsers'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\n\r\n\r\nexport default function StepperDelete(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [userId, setUserId] = useState(props.userID);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit = () => {\r\n    console.log('DELETE');\r\n    dispatch(deleteUserById(userId));\r\n    handleClose();\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant='contained'\r\n        color='secondary'\r\n        size='medium'\r\n        startIcon={<DeleteOutlinedIcon />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Delete\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='alert-dialog-title'\r\n        aria-describedby='alert-dialog-description'\r\n      >\r\n        <DialogTitle id='alert-dialog-title' color='secondary'>\r\n          {\"You are going delete User\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            By deleting user, you will not delete User completly from Data, you will set him as Unactive User.You will still able to see him at 'All Users' menu. \r\n            User will be unable to login to the site! \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary' autoFocus>\r\n            Disagree\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant='contained'\r\n            color='secondary'\r\n            size='medium'\r\n          >\r\n            Delete User\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\pages\\TourPage\\TourPage.js",["503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport ReactMapGl, {\r\n  Marker,\r\n  NavigationControl,\r\n  Popup,\r\n  ScaleControl,\r\n} from 'react-map-gl';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getTourById } from '../../redux/actions/tours';\r\nimport Pin from '../../Assets/img/comp/pin.svg';\r\nimport ImageAvatar from '../../components/Avatar/Avatar';\r\nimport makeStyles from './styles';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  CardActionArea,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Paper,\r\n  Dialog,\r\n  DialogTitle,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  Typography,\r\n  // Link,\r\n} from '@material-ui/core';\r\nimport {\r\n  Timeline,\r\n  TimelineItem,\r\n  TimelineSeparator,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineOppositeContent,\r\n  TimelineDot,\r\n} from '@material-ui/lab/';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport AirportShuttleIcon from '@material-ui/icons/AirportShuttle';\r\nimport RestaurantMenuIcon from '@material-ui/icons/RestaurantMenu';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import FolderIcon from '@material-ui/icons/Folder';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AlarmIcon from '@material-ui/icons/Alarm';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport EqualizerOutlinedIcon from '@material-ui/icons/EqualizerOutlined';\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport TodayOutlinedIcon from '@material-ui/icons/TodayOutlined';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport TourPreorder from '../../components/PopUp/TourPreorder/TourPreorder';\r\nimport { TourReviewSlider } from '../../components/Slider/reviewSlider';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function TourPage(props) {\r\n  const classes = makeStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [expanded, setExpanded] = useState(false);\r\n  // const [dense, setDense] = useState(false);\r\n  const myRef = useRef(null);\r\n  const [tourId, setTourId] = useState(props.location.state.id);\r\n  const [tour, setTour] = useState();\r\n  const [tourDate, setTourDate] = useState();\r\n  const [showPopUp, setShowPopUp] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [secondary, setSecondary] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const tourData = useSelector((state) => state.tours.tour?.data?.tour);\r\n  const bookings = useSelector((state) => state.bookings);\r\n  const user = useSelector((state) => state.auth?.user);\r\n\r\n  const [viewport, SetViewPort] = useState({\r\n    latitude: 37.9908997,\r\n    longitude: 23.7733589,\r\n    zoom: 8,\r\n    width: '100%',\r\n    height: '100%',\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const getClosestDate = (arr) => {\r\n    const now = new Date();\r\n    let closest = Infinity;\r\n    arr?.forEach(function (d) {\r\n      const date = new Date(d.date);\r\n\r\n      if (date >= now && (date < new Date(closest) || date < closest)) {\r\n        closest = d.date;\r\n      }\r\n    });\r\n    const closestDate = closest;\r\n\r\n    return closestDate;\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const toScroll = () =>\r\n    myRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n\r\n  //For running only once when page render\r\n  useEffect(() => {\r\n    dispatch(getTourById(tourId));\r\n  }, [bookings]);\r\n\r\n  //Set Tour only when Dispach return await promice\r\n  useEffect(() => {\r\n    setTour(tourData);\r\n  }, [tourData, bookings]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid className={classes.headerImg}>\r\n        <CardActionArea\r\n          className={classes.CardActionArea}\r\n          style={{\r\n            opacity: 0.75,\r\n          }}\r\n        >\r\n          <CardMedia\r\n            component='img'\r\n            alt='Contemplative Reptile'\r\n            height='400'\r\n            image='https://www.meissl.com/media/images/8f24db1f/schweiz.jpg'\r\n            title={tour?.name}\r\n          />\r\n        </CardActionArea>\r\n        <Grid item className={classes.headerBox}>\r\n          <Typography className={classes.headerUptitle} variant='h5'>\r\n            Beautifull tour to\r\n          </Typography>\r\n          <Typography className={classes.headerTitle} variant='h3'>\r\n            {tour?.name}\r\n          </Typography>\r\n          <Grid container spacing={3} justify='center' alignItems='center'>\r\n            <Grid item>\r\n              <Box display='flex' alignItems='center'>\r\n                <ListItemAvatar>\r\n                  <AlarmIcon />\r\n                </ListItemAvatar>{' '}\r\n                <Typography component='span' className={classes.header__text}>\r\n                  {tour?.duration} Day Tour\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item>\r\n              <Box display='flex' alignItems='center'>\r\n                <ListItemAvatar>\r\n                  <PeopleAltIcon />\r\n                </ListItemAvatar>{' '}\r\n                <Typography component='span' className={classes.header__text}>\r\n                  {' '}\r\n                  {tour?.maxGroupSize} people/group\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Button\r\n            variant='contained'\r\n            color='secondary'\r\n            className={classes.headerButton}\r\n            startIcon={<LibraryAddIcon />}\r\n            onClick={toScroll}\r\n          >\r\n            Order tour\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <CardContent className={classes.CardContent}>\r\n        <Grid\r\n          container\r\n          justify='center'\r\n          className={classes.aboutContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant='h6' className={classes.titleInfo}>\r\n              About {tour?.name.toUpperCase()} Tour\r\n            </Typography>\r\n            <Typography component='p'>{tour?.description}</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Typography\r\n              variant='h6'\r\n              align='center'\r\n              className={classes.titleInfo}\r\n            >\r\n              More Tour Information\r\n            </Typography>\r\n            <Grid container spacing={2} justify='center'>\r\n              <Grid item>\r\n                <Box display='flex' alignItems='center'>\r\n                  <ListItemAvatar className={classes.ListItemAvatar}>\r\n                    <TodayOutlinedIcon />\r\n                  </ListItemAvatar>{' '}\r\n                  <Typography component='span'>\r\n                    <Typography\r\n                      component='span'\r\n                      variant='body1'\r\n                      color='textSecondary'\r\n                    >\r\n                      {'Clossest Date:'.toUpperCase()}\r\n                    </Typography>\r\n                    &nbsp;&nbsp;\r\n                    {new Date(\r\n                      getClosestDate(tour?.startDates)\r\n                    ).toLocaleDateString('en-gb', {\r\n                      day: 'numeric',\r\n                      month: 'long',\r\n                      year: 'numeric',\r\n                    })}\r\n                  </Typography>\r\n                </Box>\r\n                <Box display='flex' alignItems='center'>\r\n                  <ListItemAvatar className={classes.ListItemAvatar}>\r\n                    <PeopleAltIcon />\r\n                  </ListItemAvatar>{' '}\r\n                  <Typography component='span'>\r\n                    <Typography\r\n                      component='span'\r\n                      variant='body1'\r\n                      color='textSecondary'\r\n                    >\r\n                      {'Max Group SIze:'.toUpperCase()}\r\n                    </Typography>\r\n                    &nbsp;&nbsp;\r\n                    {tour?.maxGroupSize}{' '}\r\n                    <Typography component='span' variant='body2'>\r\n                      people/group\r\n                    </Typography>{' '}\r\n                  </Typography>\r\n                </Box>\r\n                <Box display='flex' alignItems='center'>\r\n                  <ListItemAvatar className={classes.ListItemAvatar}>\r\n                    <EqualizerOutlinedIcon />\r\n                  </ListItemAvatar>{' '}\r\n                  <Typography component='span'>\r\n                    <Typography\r\n                      component='span'\r\n                      variant='body1'\r\n                      color='textSecondary'\r\n                    >\r\n                      {'Difficulity:'.toUpperCase()}\r\n                    </Typography>\r\n                    &nbsp;&nbsp;\r\n                    {tour?.difficulty?.toUpperCase()}{' '}\r\n                  </Typography>\r\n                </Box>\r\n                <Box display='flex' alignItems='center'>\r\n                  <ListItemAvatar className={classes.ListItemAvatar}>\r\n                    <StarBorderOutlinedIcon />\r\n                  </ListItemAvatar>{' '}\r\n                  <Typography component='span'>\r\n                    <Typography\r\n                      component='span'\r\n                      variant='body1'\r\n                      color='textSecondary'\r\n                    >\r\n                      {'Rating:'.toUpperCase()}\r\n                    </Typography>\r\n                    &nbsp;&nbsp;\r\n                    {tour?.ratingAvarage}&nbsp;\r\n                    {`(${tour?.ratingQuantity})`} / &nbsp;5\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item></Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box\r\n                display='flex'\r\n                alignItems='center'\r\n                justifyContent='center'\r\n                mt='30px'\r\n              >\r\n                <ImageAvatar\r\n                  size='medium'\r\n                  src={`https://tpservice.herokuapp.com/public/img/users/${tour?.guides[0]?.photo}`}\r\n                />\r\n                &nbsp;\r\n                <Typography component='span' variant='body1'>\r\n                  Tour Guide&nbsp;&nbsp;\r\n                </Typography>\r\n                <Typography component='span' variant='body2'>\r\n                  {' '}\r\n                  {tour?.guides[0]?.name}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3} className={classes.subinfoConteiner}>\r\n          <Grid item xs={12} md={6}>\r\n            <Timeline align='alternate'>\r\n              <TimelineItem>\r\n                <TimelineOppositeContent className={classes.time}>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='span'\r\n                  >\r\n                    {new Date(\r\n                      tour?.startLocation?.startTime\r\n                    ).toLocaleTimeString('en-GB', {\r\n                      hour: 'numeric',\r\n                      minute: 'numeric',\r\n                    })}\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineDot color='primary'>\r\n                    <PersonPinIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                  <Paper elevation={3} className={classes.paper}>\r\n                    <Typography className={classes.timeTitle}>\r\n                      Tour Start\r\n                    </Typography>\r\n                    <Typography\r\n                      className={classes.timeSubTitle}\r\n                      color='textSecondary'\r\n                    >\r\n                      {tour?.startLocation?.description}\r\n                    </Typography>\r\n                  </Paper>\r\n                </TimelineContent>\r\n              </TimelineItem>\r\n              {tour?.locations?.map((el, i) => (\r\n                <TimelineItem key={el._id}>\r\n                  <TimelineOppositeContent>\r\n                    {/* <Typography variant='body2' color='textSecondary'>\r\n                      {moment(tour?.startLocation?.startTime).format('hh : mm')}\r\n                    </Typography> */}\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator>\r\n                    <TimelineDot>\r\n                      {/* {i === 1 && <BeachAccessIcon />}\r\n                      {i === 0 && <AirportShuttleIcon />} */}\r\n                      {el.description === 'Dinner' && <RestaurantMenuIcon />}\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                      <Typography className={classes.timeTitle}>\r\n                        {el.description}\r\n                      </Typography>\r\n                      {/* <Typography\r\n                        component='span'\r\n                        variant='body1'\r\n                        color='textSecondary'\r\n                      >\r\n                        {el.address}\r\n                      </Typography> */}\r\n                    </Paper>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))}\r\n\r\n              <TimelineItem>\r\n                <TimelineOppositeContent className={classes.time}>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    19:00\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineDot color='secondary'>\r\n                    <RepeatIcon />\r\n                  </TimelineDot>\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                  <Paper elevation={3} className={classes.paper}>\r\n                    <Typography className={classes.timeTitle}>\r\n                      Back Home\r\n                    </Typography>\r\n                    {/* <Typography>Because this is the life you love!</Typography> */}\r\n                  </Paper>\r\n                </TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <ReactMapGl\r\n              {...viewport}\r\n              width='100%'\r\n              height='450px'\r\n              mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n              onViewportChange={(viewport) => SetViewPort(viewport)}\r\n              mapStyle='mapbox://styles/maksydev/ckl8m1vzx03cm17n01lnkbbxu'\r\n              className={classes.map}\r\n              scrollZoom={false}\r\n            \r\n            >\r\n              <NavigationControl className={classes.NavControl}/>\r\n              {tour?.locations?.map((loc) => (\r\n                <Marker\r\n                  key={loc._id}\r\n                  latitude={loc.coordinates[0]}\r\n                  longitude={loc.coordinates[1]}\r\n                  offsetTop={-30}\r\n                  offsetLeft={-15}\r\n                >\r\n                  <RoomOutlinedIcon\r\n                    color='secondary'\r\n                    style={{\r\n                      transform: `translate(${30 / 2 + 'px'}, ${\r\n                        30 / 2 + 'px'\r\n                      })`,\r\n                      width: '30px',\r\n                      height: '30px',\r\n                    }}\r\n                  />\r\n                  <span className={classes.marker_info}>{loc.description}</span>\r\n                </Marker>\r\n              ))}\r\n            </ReactMapGl>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          justify='center'\r\n          spacing={2}\r\n          className={classes.pictureConteiner}\r\n        >\r\n          {tour?.images.map((img, index) => (\r\n            <Grid item xs={12} md={4} key={index}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt={tour?.name}\r\n                  height='200'\r\n                  image='https://www.meissl.com/media/images/8f24db1f/schweiz.jpg'\r\n                  title='Contemplative Reptile'\r\n                />\r\n              </CardActionArea>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Box mt={4} mb={4} pr={3} pl={3}>\r\n          <TourReviewSlider reviewArr={tour?.review} />\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions className={classes.CardActions}>\r\n        <Grid\r\n          container\r\n          ref={myRef}\r\n          spacing={2}\r\n          justify='center'\r\n          alignItems='center'\r\n        >\r\n          {tour?.startDates?.map((date) => (\r\n            <Grid item key={date._id}>\r\n              {user ? (\r\n                <Button\r\n                  color='secondary'\r\n                  variant='contained'\r\n                  disabled={Date.now() > date.date ? true : false}\r\n                  disabled={\r\n                    date.currentGroupSize >= tour.maxGroupSize ? true : false\r\n                  }\r\n                  onClick={() => setOpen(true) || setTourDate(date.date)}\r\n                >\r\n                  <Box>\r\n                    <Typography variant='body1' component='p'>\r\n                      {new Date(date.date).toLocaleDateString('en-GB')}\r\n                    </Typography>\r\n                    <Typography variant='body2'>\r\n                      {tour.maxGroupSize - date.currentGroupSize}\r\n                      &nbsp;&nbsp;free places\r\n                    </Typography>\r\n                  </Box>\r\n                </Button>\r\n              ) : (\r\n                <Button color='primary' variant='contained'>\r\n                  <Box>\r\n                    <Typography variant='body1' component='p'>\r\n                      Sign In to Order\r\n                    </Typography>\r\n                    <Typography variant='body2'>\r\n                      {tour.maxGroupSize - date.currentGroupSize}\r\n                      &nbsp;&nbsp;free places\r\n                    </Typography>\r\n                  </Box>\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          ))}\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            className={classes.Dialog}\r\n            // aria-labelledby='form-dialog-title'\r\n            fullWidth\r\n          >\r\n            <DialogTitle className={classes.Dialog__title}>\r\n              Preorder Tour\r\n            </DialogTitle>\r\n            <TourPreorder setClose={handleClose} tourdate={tourDate} />\r\n          </Dialog>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\tours.js",["528"],"import * as api from '../../api/index';\r\nimport {\r\n  GET_ALL_TOURS_FAIL,\r\n  GET_ALL_TOURS_SUCCESS,\r\n  GET_TOUR_DATA_SUCCESS,\r\n  GET_TOUR_DATA_FAIL,\r\n} from './types';\r\nimport { setAlert } from './alert';\r\n\r\nexport const getAllTours = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.getAllTours();\r\n    if (res.data.status === 'Success') {\r\n      dispatch({ type: GET_ALL_TOURS_SUCCESS, payload: res?.data?.data?.tours });\r\n    }\r\n  } catch (err) {\r\n    const error = err.response.data;\r\n    if (error) {\r\n      dispatch({ type: GET_ALL_TOURS_FAIL, payload: error?.message });\r\n    }\r\n  }\r\n};\r\n\r\nexport const getTourById = (tourId) => async (dispatch) => {\r\n  try {\r\n    const res = await api.getTourById(tourId);\r\n    if (res.data.status === 'Success') {\r\n      dispatch({ type: GET_TOUR_DATA_SUCCESS, payload: res?.data });\r\n    }\r\n    console.log(res);\r\n  } catch (err) {\r\n    const error = err.response.data;\r\n    if (error) {\r\n      dispatch({ type: GET_TOUR_DATA_FAIL, payload: error?.message });\r\n    }\r\n  }\r\n};\r\n","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\tours.js",["529"],"import {\r\nGET_ALL_TOURS_SUCCESS,\r\nGET_ALL_TOURS_FAIL,\r\nGET_TOUR_DATA_SUCCESS,\r\nGET_TOUR_DATA_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default (state= initialState, action)=>{\r\nswitch (action.type) {\r\n  case GET_ALL_TOURS_SUCCESS:\r\n    return {...state, tours: action?.payload}\r\n  case GET_ALL_TOURS_FAIL:\r\n    return {...state}\r\n  case GET_TOUR_DATA_SUCCESS:\r\n    return {...state, tour: action?.payload}\r\n  case GET_TOUR_DATA_FAIL:\r\n    return {...state, tour: action?.payload}\r\n  default:\r\n    return state\r\n}\r\n}","E:\\WWW\\tpservice\\client\\src\\pages\\TourPage\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\TourPreorder\\TourPreorder.js",["530","531","532","533","534","535"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport makeStyles from './styles';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  Typography,\r\n  CardMedia,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\r\nimport { createBooking } from '../../../redux/actions/booking';\r\n\r\n\r\n\r\nfunction getSteps() {\r\n  return [\r\n    'Check Your Order',\r\n    // 'Check Your Order',\r\n    // 'Create an ad',\r\n  ];\r\n}\r\n\r\nexport default function TourPreorder(props) {\r\n  const classes = makeStyles();\r\n  const dispatch = useDispatch();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [tour, SetTour] = useState();\r\n  const [formData, setFormdata] = useState();\r\n  const [date, setDate] = useState(props.tourdate);\r\n  const tourData = useSelector((state) => state.tours?.tour?.data?.tour);\r\n  const currentUser = useSelector((state) => state.auth);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n    /* Add dispatch methode with formData */\r\n    dispatch(createBooking(formData));\r\n    // console.log(formData);\r\n    setTimeout(() => {\r\n      props.setClose();\r\n    }, 4000);\r\n  };\r\n  // console.log(tour?._id);\r\n\r\n  useEffect(() => {\r\n    SetTour(tourData);\r\n    setFormdata({\r\n      tour: tourData?._id,\r\n      tourDate: date,\r\n      price: tour?.price,\r\n      user: currentUser?.user._id,\r\n    });\r\n  }, [tour]);\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <Container>\r\n            <Box pb={4}>\r\n              <CardMedia\r\n                component='img'\r\n                alt='Contemplative Reptile'\r\n                height='120'\r\n                image='https://www.meissl.com/media/images/8f24db1f/schweiz.jpg'\r\n                // title={tour?.name}\r\n              />\r\n              <Box pt={2}>\r\n                <Typography component='div'>\r\n                  <Typography\r\n                    component='span'\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                  >\r\n                    {' '}\r\n                    Tour Name:\r\n                  </Typography>\r\n                  <Typography component='span' variant='body2'>\r\n                    {' '}\r\n                    {tour?.name}\r\n                  </Typography>\r\n                </Typography>\r\n                <Typography component='div'>\r\n                  <Typography\r\n                    component='span'\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                  >\r\n                    {' '}\r\n                    Tour Date:\r\n                  </Typography>\r\n                  <Typography component='span' variant='body2'>\r\n                    {' '}\r\n                    {new Date(date).toLocaleDateString('en-gb', {\r\n                      day: 'numeric',\r\n                      month: 'long',\r\n                      year: 'numeric',\r\n                    })}\r\n                  </Typography>\r\n                </Typography>\r\n                <Typography component='div'>\r\n                  <Typography\r\n                    component='span'\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                  >\r\n                    {' '}\r\n                    Meeting Point:\r\n                  </Typography>\r\n                  <Typography component='span' variant='body2'>\r\n                    {' '}\r\n                    {tour?.startLocation?.description}\r\n                  </Typography>\r\n                </Typography>\r\n                <Typography component='div'>\r\n                  <Typography\r\n                    component='span'\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                  >\r\n                    {' '}\r\n                    Start at:\r\n                  </Typography>\r\n                  <Typography component='span' variant='body2'>\r\n                    {' '}\r\n                    {new Date(\r\n                      tour?.startLocation?.startTime\r\n                    ).toLocaleTimeString('en-gb', {\r\n                      hour: 'numeric',\r\n                      minute: 'numeric',\r\n                    })}\r\n                  </Typography>\r\n                </Typography>\r\n                <Typography component='div'>\r\n                  <Typography\r\n                    component='span'\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                  >\r\n                    {' '}\r\n                    Guide Number:\r\n                  </Typography>\r\n                  <Typography component='span' variant='body2'>\r\n                    {' '}\r\n                    {tour?.guides[0]?.phone}\r\n                  </Typography>\r\n                </Typography>\r\n                <Grid container alignItems='center' spacing={1}>\r\n                  <Grid item>\r\n                    <Typography component='div'>\r\n                      <Typography\r\n                        component='span'\r\n                        variant='body2'\r\n                        color='textSecondary'\r\n                      >\r\n                        {' '}\r\n                        Tour Price:\r\n                      </Typography>\r\n                      <Typography\r\n                        component='span'\r\n                        variant='body2'\r\n                        color='textPrimary'\r\n                      >\r\n                        {' '}\r\n                        {tour?.price} EURO\r\n                      </Typography>\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Box>\r\n          </Container>\r\n        );\r\n      // case 1:\r\n      //   return (\r\n\r\n      //   );\r\n      // case 2:\r\n      //   return 'This is the bit I really care about!';\r\n      default:\r\n        return 'Unknown stepIndex';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper\r\n        activeStep={activeStep}\r\n        alternativeLabel\r\n        className={classes.Stepper}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography component='div' variant='h6' className={classes.success}>\r\n              Tour has been Ordered!!!\r\n            </Typography>\r\n            {/* <Button onClick={handleReset}>Reset</Button> */}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography component='div' className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <Box display='flex' justifyContent='center'>\r\n              {/* <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button> */}\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={\r\n                  activeStep === steps.length - 1 ? handleSubmit : handleNext\r\n                }\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Order Tour' : 'Next'}\r\n              </Button>\r\n            </Box>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\TourPreorder\\styles.js",["536"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 10px 35px 10px',\r\n  },\r\n  Container: {\r\n    padding: '25px 10px',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  Stepper: {\r\n    padding: 0,\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  success: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    textAlign: 'center',\r\n    fontWeight:600,\r\n    color: green[600]\r\n  },\r\n}));","E:\\WWW\\tpservice\\client\\src\\components\\Tours\\Tour\\AdminTour.js",["537","538","539","540","541","542","543","544","545"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Grid,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport AssistantPhotoOutlinedIcon from '@material-ui/icons/AssistantPhotoOutlined';\r\nimport AlarmOutlinedIcon from '@material-ui/icons/AlarmOutlined';\r\nimport EuroSymbolOutlinedIcon from '@material-ui/icons/EuroSymbolOutlined';\r\nimport {getAllTours} from '../../../redux/actions/tours'\r\nimport EqualizerOutlinedIcon from '@material-ui/icons/EqualizerOutlined';\r\nimport EuroOutlinedIcon from '@material-ui/icons/EuroOutlined';\r\nimport makeStyles from './styles';\r\n\r\n\r\n\r\nconst AdminTour=()=> {\r\n  const classes = makeStyles();\r\n  const [toursData, setToursData]= useState();\r\n  const dispatch = useDispatch();\r\n  const tours = useSelector((state) => state.tours?.tours);\r\n  console.log(toursData);\r\n    useEffect(() => {\r\n      dispatch(getAllTours());\r\n    }, []);\r\n    useEffect(() => {\r\n      if (tours) {\r\n        setToursData(tours);\r\n      }\r\n    }, [tours]);\r\n\r\n  return (\r\n    <Grid container spacing={2} className={classes.AdminTours_container}>\r\n      {toursData &&\r\n        toursData.map((tour) => (\r\n          <Grid item xs={12} sm={6} md={4} key={tour._id}>\r\n            <Card className={classes.root}>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image='https://www.meissl.com/media/images/8f24db1f/schweiz.jpg'\r\n                title={tour?.name}\r\n              />\r\n              <CardContent className={classes.CardContent}>\r\n                <Box\r\n                  className={classes.Rating}\r\n                  display='flex'\r\n                  borderColor='transparent'\r\n                >\r\n                  <Rating\r\n                    className={classes.RatingStars}\r\n                    name='half-rating-read'\r\n                    defaultValue={tour.ratingAvarage}\r\n                    precision={0.5}\r\n                    readOnly\r\n                  />\r\n                </Box>\r\n                <Typography\r\n                  className={classes.tourName}\r\n                  gutterBottom\r\n                  variant='h5'\r\n                  component='h2'\r\n                >\r\n                  {tour.name}\r\n                </Typography>\r\n                <Box my={0.8}>\r\n                  {/* <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'\r\n                  >\r\n                    {tour.summary}\r\n                  </Typography> */}\r\n                </Box>\r\n\r\n                <div className={classes.card__row}>\r\n                  <ListItem className={classes.ListItem}>\r\n                    <ListItemAvatar className={classes.ListItemAvatar}>\r\n                      <Avatar className={classes.Avatar}>\r\n                        <EqualizerOutlinedIcon className={classes.Icon} />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <Typography className={classes.Typography} variant='body2'>\r\n                      {tour?.difficulty?.toUpperCase()}\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem className={classes.ListItem}>\r\n                    <ListItemAvatar className={classes.ListItemAvatar}>\r\n                      <Avatar className={classes.Avatar}>\r\n                        <AssistantPhotoOutlinedIcon className={classes.Icon} />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <Typography className={classes.Typography} variant='body2'>\r\n                      {tour.startLocation.description}\r\n                    </Typography>\r\n                  </ListItem>\r\n                </div>\r\n                <div className={classes.card__row}>\r\n                  <ListItem className={classes.ListItem}>\r\n                    <ListItemAvatar className={classes.ListItemAvatar}>\r\n                      <Avatar className={classes.Avatar}>\r\n                        <AlarmOutlinedIcon className={classes.Icon} />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <Typography className={classes.Typography} variant='body2'>\r\n                      {tour.duration} Day <span>Tour</span>\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem className={classes.ListItem}>\r\n                    <ListItemAvatar className={classes.ListItemAvatar}>\r\n                      <Avatar className={classes.Avatar}>\r\n                        <EuroOutlinedIcon className={classes.Icon} />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <Typography className={classes.Typography} variant='body2'>\r\n                      {tour?.price} <span>EURO</span>\r\n                    </Typography>\r\n                  </ListItem>\r\n                </div>\r\n                <Box mt={2}>\r\n                  <Paper>\r\n                    <Table>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell className={classes.adminHeaderCell}>\r\n                            Date\r\n                          </TableCell>\r\n                          <TableCell className={classes.adminHeaderCell}>\r\n                            Start At\r\n                          </TableCell>\r\n                          <TableCell className={classes.adminHeaderCell}>\r\n                            Group SIze\r\n                          </TableCell>\r\n                          <TableCell className={classes.adminHeaderCell}>\r\n                            Ordered\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      {tour?.startDates?.map((date) => (\r\n                        <TableBody key={date._id}>\r\n                          <TableRow>\r\n                            <TableCell className={classes.adminCell}>\r\n                              {new Date(date?.date).toLocaleDateString(\r\n                                'en-gb',\r\n                                {\r\n                                  day: 'numeric',\r\n                                  month: 'numeric',\r\n                                  year: 'numeric',\r\n                                  weekday: 'short',\r\n                                }\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell className={classes.adminCell}>\r\n                              {new Date(date?.date).toLocaleTimeString(\r\n                                'en-gb',\r\n                                {\r\n                                  hour: 'numeric',\r\n                                  minute: 'numeric',\r\n                                }\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell className={classes.adminCell}>\r\n                              {tour?.maxGroupSize}\r\n                            </TableCell>\r\n                            <TableCell className={classes.adminCell}>\r\n                              {date?.currentGroupSize}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      ))}\r\n                    </Table>\r\n                  </Paper>\r\n                </Box>\r\n              </CardContent>\r\n\r\n              <CardActions className={classes.cardFooter}>\r\n                {/* <NavLink\r\n                  to={{\r\n                    pathname: `/tour/${tour.slug}`,\r\n                    state: { id: tour._id },\r\n                  }}\r\n                >\r\n                  <Button size='small' color='primary' variant='contained'>\r\n                    Learn More\r\n                  </Button>\r\n                </NavLink> */}\r\n\r\n                <Box>\r\n                  {/* <ListItem className={classes.ListItemPrice}>\r\n                    <ListItemAvatar className={classes.ListItemAvatarPrice}>\r\n                      <EuroSymbolOutlinedIcon className={classes.euroIcon} />\r\n                    </ListItemAvatar>\r\n                    <Typography\r\n                      className={classes.TypographyPrice}\r\n                      variant='body2'\r\n                    >\r\n                      {tour.price}{' '}\r\n                      <span className={classes.TypographyPriceSpan}>\r\n                        per/person\r\n                      </span>\r\n                    </Typography>\r\n                  </ListItem> */}\r\n                </Box>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AdminTour\r\n","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\AdminAddTour\\AdminAddTour.js",["546","547","548","549"],"import React from 'react';\r\nimport {Button,IconButton} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AdminAddTourStepper from './AdminAddTourStepper'\r\nimport LibraryAddOutlinedIcon from '@material-ui/icons/LibraryAddOutlined';\r\nimport makeStyles from './styles';\r\n\r\n\r\nexport default function FormDialog() {\r\n  const classes = makeStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant='outlined' color='primary' onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n      <IconButton size={'small'} onClick={handleClickOpen}>\r\n        <LibraryAddOutlinedIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='form-dialog-title'\r\n        className={classes.Dialog}\r\n      >\r\n        <DialogTitle id='form-dialog-title'>Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          {/* <DialogContentText>\r\n            To subscribe to this website, please enter your email address here.\r\n            We will send updates occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin='dense'\r\n            id='name'\r\n            label='Email Address'\r\n            type='email'\r\n            fullWidth\r\n          /> */}\r\n          <AdminAddTourStepper />\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\AdminAddTour\\AdminAddTourStepper.js",["550","551","552","553","554","555"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Stepper,\r\n  TextField,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n} from '@material-ui/core';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Input from '../../Input/Input';\r\nimport UploadButton from '../../UploadButton/UploadButton';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  selectDifficulty: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Step 1', 'Step 2', 'Step 3', 'Step 4'];\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [selectedDate, setSelectedDate] = useState([\r\n    { date: new Date(Date.now()) },\r\n  ]);\r\n\r\n  const [tourData, setTourData] = useState({\r\n    name: '',\r\n    duration: '',\r\n    difficulty: '',\r\n    maxGroupSize: '',\r\n    price: '',\r\n    imageCover: {},\r\n    startDates: [],\r\n  });\r\n  const steps = getSteps();\r\n  console.log(tourData.startDates);\r\n  console.log(selectedDate);\r\n\r\n  const handleDateChange = (date,e) => {\r\n    // setSelectedDate()\r\n  };\r\n  const addRow = () => {\r\n    const dates = tourData.startDates;\r\n    if (dates.length < 4) {\r\n      dates.push({ date:selectedDate});\r\n      setTourData({ startDates: dates });\r\n    }\r\n  };\r\n  const delRow = () => {\r\n    const dates = tourData.startDates;\r\n    if (dates.length > 0) {\r\n      dates.pop();\r\n      setTourData({ startDates: dates });\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setTourData({ ...tourData, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(tourData);\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  const uploadHandler = (event) => {\r\n    setTourData({ ...tourData, imageCover: event.target.files[0] });\r\n  };\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <Box mt={3} mb={3}>\r\n            <Grid container justify='center' spacing={2}>\r\n              <Input\r\n                autofocus\r\n                name='name'\r\n                type='text'\r\n                label='Tour Name'\r\n                handleChange={handleChange}\r\n                value={tourData.name}\r\n                half\r\n              />\r\n              <Input\r\n                name='duration'\r\n                type='number'\r\n                label='Tour duration'\r\n                handleChange={handleChange}\r\n                value={tourData.duration}\r\n                small\r\n              />\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id='select'\r\n                  label='Tour difficulty'\r\n                  value={tourData.difficulty}\r\n                  margin='dense'\r\n                  variant='outlined'\r\n                  name='difficulty'\r\n                  select\r\n                  className={classes.selectDifficulty}\r\n                  onChange={(e, newValue) => {\r\n                    setTourData({ ...tourData, difficulty: e.target.value });\r\n                  }}\r\n                >\r\n                  <MenuItem value='easy'>Easy</MenuItem>\r\n                  <MenuItem value='medium'>Medium</MenuItem>\r\n                  <MenuItem value='hard'>Hard</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              <Input\r\n                name='maxGroupSize'\r\n                type='number'\r\n                label='Max Group Size'\r\n                handleChange={handleChange}\r\n                value={tourData.maxGroupSize}\r\n                small\r\n              />\r\n            </Grid>\r\n          </Box>\r\n        );\r\n      case 1:\r\n        return (\r\n          <Box mt={3} mb={3}>\r\n            <Grid container spacing={2}>\r\n              <Input\r\n                autofocus\r\n                name='summary'\r\n                type='text'\r\n                label='Tour Summary'\r\n                rows={2}\r\n                multiline\r\n                handleChange={handleChange}\r\n                value={tourData.summary}\r\n              />\r\n              <Input\r\n                autofocus\r\n                name='description'\r\n                type='text'\r\n                label='Tour Description'\r\n                rows={4}\r\n                multiline\r\n                handleChange={handleChange}\r\n                value={tourData.description}\r\n              />\r\n              <Grid container alignItems='center' justify='center' spacing={2}>\r\n                <Input\r\n                  autofocus\r\n                  name='price'\r\n                  type='number'\r\n                  label='Tour Price'\r\n                  handleChange={handleChange}\r\n                  value={tourData.price}\r\n                  small\r\n                />\r\n                <Grid item>\r\n                  <UploadButton\r\n                    name='imageCover'\r\n                    id='imageCover'\r\n                    IconType='btn'\r\n                    btnText='Upload Cover Image'\r\n                    handleChange={uploadHandler}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Box mt={3} mb={3}>\r\n            <Grid container spacing={2}>\r\n              {tourData.startDates.map((date, index) => (\r\n                <Grid item xs={12} md={6} key={index}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      margin='normal'\r\n                      id='date-picker-dialog'\r\n                      label='Date picker dialog'\r\n                      format='dd/MM/yyyy'\r\n                      value={new Date(Date.now())}\r\n                      onChange={handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n              ))}\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid item>\r\n                  <IconButton onClick={addRow}>\r\n                    <AddBoxOutlinedIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton onClick={delRow}>\r\n                    <IndeterminateCheckBoxOutlinedIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        );\r\n      case 3:\r\n        return 'This is the bit I really care about!';\r\n      default:\r\n        return 'Unknown stepIndex';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography component='span' className={classes.instructions}>\r\n              All steps completed\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography component='span' className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant='contained' color='primary' onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\AdminAddTour\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\pages\\MainPage\\MainPage.js",["556"],"import React from 'react'\r\n\r\nimport makeStyles from './styles';\r\nimport {MainSlider} from '../../components/Slider/Slider'\r\n\r\nexport default function MainPage(){\r\n  return (\r\n    <div>\r\n      <MainSlider/>\r\n    </div>\r\n  )\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\pages\\MainPage\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\Slider\\Slider.js",["557","558"],"import React, { useState } from 'react';\r\nimport SwiperCore, {\r\n  Navigation,\r\n  Pagination,\r\n  Scrollbar,\r\n  A11y,\r\n  EffectFade,\r\n  Autoplay,\r\n} from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Grid,\r\n  CardMedia,\r\n  Typography,\r\n  Box,\r\n  CardActionArea,\r\n} from '@material-ui/core';\r\nimport ImageAvatar from '../../components/Avatar/Avatar';\r\nimport makeStyles from './styles';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, EffectFade, Autoplay]);\r\nconst slider = [\r\n  {\r\n    url:\r\n      'https://c.pxhere.com/images/87/31/d43f9e1c93e29e2827fbfeeac08e-1450369.jpg!d',\r\n    title: 'Title 1',\r\n    text:\r\n      'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for \"lorem ipsum\" will uncover many web sites still in their infancy.',\r\n  },\r\n  {\r\n    url:\r\n      'https://strollinggreece.com/wp-content/uploads/2019/08/Orlias-waterfall-northern-Greece.jpg',\r\n    title: 'Title 2',\r\n    text:\r\n      'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for \"lorem ipsum\" will uncover many web sites still in their infancy.',\r\n  },\r\n];\r\nexport const MainSlider = () => {\r\n  const classes = makeStyles();\r\n  return (\r\n    <Swiper\r\n      spaceBetween={2}\r\n      slidesPerView={1}\r\n      autoplay={{ delay: 6000 }}\r\n      loop={true}\r\n      // navigation\r\n      pagination={{ clickable: true }}\r\n      // scrollbar={{ draggable: false }}\r\n      onSwiper={(swiper) => console.log(swiper)}\r\n      onSlideChange={() => console.log('slide change')}\r\n      height='90vh'\r\n      // effect='fade'\r\n    >\r\n      <Grid container>\r\n        {slider.map((slide, index) => (\r\n          <SwiperSlide key={index}>\r\n            <Grid item>\r\n              <CardActionArea style={{ opacity: 0.7 }}>\r\n                <CardMedia\r\n                  style={{ height: '90vh' }}\r\n                  className={classes.media}\r\n                  image={slide.url}\r\n                  title={slide.title}\r\n                />\r\n              </CardActionArea>\r\n              <Box\r\n                position='absolute'\r\n                width='95%'\r\n                top={'10%'}\r\n                left={'50%'}\r\n                className={classes.SlideTextBox}\r\n              >\r\n                <Paper\r\n                  elevation={3}\r\n                  style={{\r\n                    backgroundColor: 'rgba(255, 255, 255, 0.4)',\r\n                    padding: '15px 25px',\r\n                  }}\r\n                >\r\n                  <Typography variant='h2'>{slide.title}</Typography>\r\n                  <Typography variant='body1'>{slide.text}</Typography>\r\n                  <Button>Check it...</Button>\r\n                </Paper>\r\n              </Box>\r\n            </Grid>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Grid>\r\n    </Swiper>\r\n  );\r\n};","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\booking.js",["559","560","561"],"import * as api from '../../api/index';\r\nimport {\r\n  GETALL_BOOKINGS_SUCCESS,\r\n  GETALL_BOOKINGS_FAIL,\r\n  CREATE_BOOKING_FAIL,\r\n  CREATE_BOOKING_SUCCESS,\r\n  GET_BOOKING_SUCCESS,\r\n  GET_BOOKING_FAIL,\r\n  DELETE_BOOKING_FAIL,\r\n  DELETE_BOOKING_SUCCESS\r\n} from './types';\r\nimport { setAlert } from './alert';\r\n\r\nexport const createBooking = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.createBooking(formData);\r\n    if (res.data.status === 'Success') {\r\n      dispatch({ type: CREATE_BOOKING_SUCCESS, payload: res?.data });\r\n      dispatch(setAlert('Booking was created!!','success'))\r\n    }\r\n  } catch (err) {\r\n    const error = err.response?.data;\r\n    if (error) {\r\n      dispatch({ type: CREATE_BOOKING_FAIL, payload: error?.message });\r\n      dispatch(setAlert(error?.message, 'error'));\r\n    }\r\n  }\r\n};\r\n\r\nexport const getMyBookings = ()=> async (dispatch)=>{\r\n  try {\r\n    const res = await api.getMyBokkings();\r\n    if( res.data.status === 'Success'){\r\n      dispatch({\r\n        type: GET_BOOKING_SUCCESS,\r\n        payload: res?.data?.data?.bookings,\r\n      });\r\n    }\r\n    // console.log('MYBOOKINGS',res?.data?.data?.bookings);\r\n  } catch (err) {\r\n    const error = err.response?.data;\r\n    if (error){\r\n      dispatch({type: GET_BOOKING_FAIL, payload: error?.message})\r\n      dispatch(setAlert(error?.message, 'error'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteMyBooking =(bookId)=> async (dispatch)=>{\r\n  try {\r\n    const res= await api.deleteMyBooking(bookId);\r\n    if (res.status === 204) {\r\n      dispatch({ type: DELETE_BOOKING_SUCCESS, payload: bookId });\r\n      dispatch(setAlert('Booking has been deleted!!', 'success'));\r\n    }\r\n  } catch (err) {\r\n    \r\n  }\r\n}","E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\booking.js",["562","563","564"],"import {\r\n  GETALL_BOOKINGS_FAIL,\r\n  GETALL_BOOKINGS_SUCCESS,\r\n  CREATE_BOOKING_SUCCESS,\r\n  CREATE_BOOKING_FAIL,\r\n  GET_BOOKING_FAIL,\r\n  GET_BOOKING_SUCCESS,\r\n  DELETE_BOOKING_SUCCESS,\r\n  DELETE_BOOKING_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_BOOKING_SUCCESS:\r\n      return { ...state};\r\n    case CREATE_BOOKING_FAIL:\r\n      return { ...state};\r\n\r\n\r\n\r\n    case GET_BOOKING_SUCCESS:\r\n      return {...state, myBookings:action?.payload };\r\n    case GET_BOOKING_FAIL:\r\n      return { ...state, error: action?.payload };\r\n    case DELETE_BOOKING_SUCCESS:\r\n      return (\r\n       {...state, myBookings: state.myBookings.filter((booking) => booking._id !== action.payload)}\r\n      );\r\n    case DELETE_BOOKING_FAIL:\r\n      return {...state}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\WWW\\tpservice\\client\\src\\pages\\MyBookings\\MyBookings.js",["565","566"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid } from '@material-ui/core';\r\nimport BookingCard from '../../components/BookingCard/BookingCard';\r\nexport default function MyBookings() {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <BookingCard />\r\n    </Grid>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\BookingCard\\BookingCard.js",["567","568"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport makeStyles from './styles';\r\nimport { getMyBookings, deleteMyBooking } from '../../redux/actions/booking';\r\nimport AddReview from '../PopUp/AddReview/Addreview'\r\n\r\nexport default function BookingCard() {\r\n  const classes = makeStyles();\r\n  const dispatch = useDispatch();\r\n  const [bookings, setBookings] = useState();\r\n  const BookingsArr = useSelector((state) => state.bookings);\r\n\r\n  const handleDelete = (bookId) => {\r\n    console.log(`delete BOOK ${bookId}`);\r\n    dispatch(deleteMyBooking(bookId));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getMyBookings());\r\n  }, []);\r\n  useEffect(() => {\r\n    setBookings(BookingsArr?.myBookings);\r\n  }, [BookingsArr]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {bookings?.length > 0 ?\r\n     <Fragment>      {bookings?.map((book) => (\r\n        <Grid item xs={12} md={3} key={book._id}>\r\n          <Paper className={classes.root} elevation={3}>\r\n            <Card>\r\n              <CardMedia\r\n                // className={classes.media}\r\n                image='https://www.meissl.com/media/images/8f24db1f/schweiz.jpg'\r\n                // title={tour.name}\r\n                style={{ height: '150px' }}\r\n              />\r\n              <CardContent>\r\n                <Table>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                        >\r\n                          Tour Name:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textPrimary'\r\n                        >\r\n                          {book.tour.name}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                        >\r\n                          Tour date:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textPrimary'\r\n                        >\r\n                          {new Date(book.tourDate).toLocaleDateString('en-gb', {\r\n                            day: 'numeric',\r\n                            month: 'numeric',\r\n                            year: 'numeric',\r\n                            hour: 'numeric',\r\n                            minute: 'numeric',\r\n                          })}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                        >\r\n                          Start from:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textPrimary'\r\n                        >\r\n                          {book.tour.startLocation.description}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                        >\r\n                          Tour price:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textPrimary'\r\n                        >\r\n                          {book.tour.price} EURO\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                        >\r\n                          Pay Methode:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textPrimary'\r\n                        >\r\n                          {book.paymentMethode.toUpperCase()}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                        >\r\n                          Guide Phone:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textPrimary'\r\n                        >\r\n                          {book.tour.guides[0].phone}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                        >\r\n                          Ordred At:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell className={classes.TableCell}>\r\n                        <Typography\r\n                          component='span'\r\n                          variant='body2'\r\n                          color='textPrimary'\r\n                        >\r\n                          {new Date(book.createdAt).toLocaleDateString(\r\n                            'en-gb',\r\n                            {\r\n                              day: 'numeric',\r\n                              month: 'long',\r\n                              year: 'numeric',\r\n                            }\r\n                          )}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n\r\n              <Box pb={2}>\r\n                <Grid container spacing={2} justify='center'>\r\n                  {new Date(book.tourDate) > Date.now() && (\r\n                    <Grid item>\r\n                      <Button\r\n                        variant='contained'\r\n                        color='secondary'\r\n                        onClick={() => handleDelete(book._id)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </Grid>\r\n                  )}\r\n                  {new Date(book.tourDate) < Date.now() && (\r\n                    <Grid item>\r\n                      <AddReview tourId={book.tour._id}/>\r\n                      {/* <Button variant='contained' color='primary'>\r\n                        Add Review\r\n                      </Button> */}\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Box>\r\n            </Card>\r\n          </Paper>\r\n        </Grid>\r\n      ))}</Fragment> \r\n    \r\n    : <Typography component='div' variant='body1'> You don't book tour yet...</Typography>}\r\n    </Fragment>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\BookingCard\\styles.js",["569"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  TableCell:{\r\n    padding:5,\r\n  }\r\n}));\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Slider\\reviewSlider.js",["570","571","572","573","574","575","576"],"import React, { useState } from 'react';\r\nimport SwiperCore, {\r\n  Navigation,\r\n  Pagination,\r\n  Scrollbar,\r\n  A11y,\r\n  EffectFade,\r\n  Autoplay,\r\n} from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport {\r\n  Paper,\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  CardMedia,\r\n  Card,\r\n  Typography,\r\n  Box,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  CardActionArea,\r\n} from '@material-ui/core';\r\nimport ImageAvatar from '../../components/Avatar/Avatar';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport makeStyles from './styles';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, EffectFade, Autoplay]);\r\n\r\nexport const TourReviewSlider = ({ reviewArr }) => {\r\n  const classes = makeStyles();\r\n  return (\r\n    <Swiper\r\n      spaceBetween={10}\r\n      slidesPerView={1}\r\n      autoplay={{ delay: 6000 }}\r\n      loop={true}\r\n      className={classes.reviewSwiperContainer}\r\n      // navigation\r\n      // pagination={{ clickable: true }}\r\n      // scrollbar={{ draggable: false }}\r\n      // onSwiper={(swiper) => console.log(swiper)}\r\n      // onSlideChange={() => console.log('slide change')}\r\n      breakpoints={{\r\n        360: {\r\n          // width: 320,\r\n          slidesPerView: 1,\r\n        },\r\n        660: {\r\n          // width: 620,\r\n          slidesPerView: 2,\r\n        },\r\n        960: {\r\n          // width: 920,\r\n          slidesPerView: 4,\r\n        },\r\n      }}\r\n      // height='100%'\r\n      // effect='fade'\r\n    >\r\n      {reviewArr?.map((review, index) => (\r\n        <Grid item key={index} className={classes.GridItemReview}>\r\n          <SwiperSlide>\r\n            <Card className={classes.review}>\r\n              <CardHeader\r\n                avatar={\r\n                  <ImageAvatar\r\n                    src={`https://tpservice.herokuapp.com/public/img/users/${review?.user?.photo}`}\r\n                    flag\r\n                    flagsrc={`https://tpservice.herokuapp.com/public/img/flags/${\r\n                      review?.user?.country?.toLowerCase() + '.svg'\r\n                    }`}\r\n                    size='medium'\r\n                  />\r\n                }\r\n                // action={\r\n                //   // <IconButton aria-label='settings'>\r\n                //   //   {/* <MoreVertIcon /> */}\r\n                //   // </IconButton>\r\n                // }\r\n                title={review?.user?.name}\r\n                subheader={new Date(review?.createdAt).toLocaleDateString(\r\n                  'en-gb',\r\n                  {\r\n                    day: 'numeric',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                  }\r\n                )}\r\n              />\r\n              <CardContent>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                  {review?.review}\r\n                </Typography>\r\n                <Box\r\n                  component='fieldset'\r\n                  mb={3}\r\n                  borderColor='transparent'\r\n                  display='flex'\r\n                  justifyContent='center'\r\n                  className={classes.Rating}\r\n                >\r\n                  <Rating\r\n                    name='read-only'\r\n                    value={review?.rating}\r\n                    readOnly\r\n                    precision={0.5}\r\n                    size='small'\r\n                  />\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </SwiperSlide>\r\n        </Grid>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n};\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Slider\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\PopUp\\AddReview\\Addreview.js",["577"],"import React,{useState,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {Button,Box} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport {createRating} from '../../../redux/actions/rating'\r\n\r\n\r\nconst labels = {\r\n  0.5: 'Useless',\r\n  1: 'Useless+',\r\n  1.5: 'Poor',\r\n  2: 'Poor+',\r\n  2.5: 'Ok',\r\n  3: 'Ok+',\r\n  3.5: 'Good',\r\n  4: 'Good+',\r\n  4.5: 'Excellent',\r\n  5: 'Excellent+',\r\n};\r\n\r\nexport default function Addreview(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState(4.5);\r\n  const [hover, setHover] = useState(-1);\r\n  const [feedBack, SetFeedBack]= useState();\r\n  const user = useSelector(state => state.auth?.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleChange=(e)=>{\r\n    SetFeedBack(e.target.value)\r\n  }\r\n  const handleSumit = (e)=>{\r\n    const formData = {\r\n      tour: props?.tourId,\r\n      user: user?._id,\r\n      review: feedBack,\r\n      rating: value,\r\n    };\r\n    dispatch(createRating(formData));\r\n    setOpen(false);\r\n    console.log(formData);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant='contained' color='primary' onClick={handleClickOpen}>\r\n        Add Review\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='form-dialog-title'\r\n      >\r\n        <DialogTitle id='form-dialog-title'>Adding Tour Review</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please leave your Rating and feedback!\r\n          </DialogContentText>\r\n          <Box textAlign='center' mt={2}>\r\n            <Rating\r\n              name='hover-feedback'\r\n              size='large'\r\n              value={value}\r\n              precision={0.5}\r\n              onChange={(event, newValue) => {\r\n                setValue(newValue);\r\n              }}\r\n              onChangeActive={(event, newHover) => {\r\n                setHover(newHover);\r\n              }}\r\n            />\r\n            {value !== null && (\r\n              <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>\r\n            )}\r\n          </Box>\r\n          <Box mt={3} width='100%'>\r\n            <TextField\r\n              id='tour-review'\r\n              label='Add feedback'\r\n              multiline\r\n              rows={3}\r\n              fullWidth\r\n              variant='outlined'\r\n              onChange={handleChange}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSumit} color='primary'>\r\n            Send\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\redux\\actions\\rating.js",[],"E:\\WWW\\tpservice\\client\\src\\redux\\reducers\\rating.js",["578"],"import {\r\n  ADD_RATING_SUCCESS,\r\n  ADD_RATING_FAIL,\r\n  GET_RATING_SUCCESS,\r\n  GET_RATING_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_RATING_SUCCESS:\r\n      return { ...state, newRating: action?.payload };\r\n    case ADD_RATING_FAIL:\r\n      return { ...state };\r\n    case GET_RATING_SUCCESS:\r\n      return { ...state, myReviews: action?.payload };\r\n    case GET_RATING_FAIL:\r\n      return { ...state, getRatingError: action?.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Footer\\Footer.js",["579","580","581","582","583","584","585","586","587","588"],"import React from 'react';\r\nimport makeStyles from './styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nexport default function LabelBottomNavigation() {\r\n  const classes = makeStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.footer}>\r\n      {/* <BottomNavigation value={value} onChange={handleChange}>\r\n        <BottomNavigationAction\r\n          label='Recents'\r\n          value='recents'\r\n          icon={<RestoreIcon />}\r\n        />\r\n        <BottomNavigationAction\r\n          label='Favorites'\r\n          value='favorites'\r\n          icon={<FavoriteIcon />}\r\n        />\r\n        <BottomNavigationAction\r\n          label='Nearby'\r\n          value='nearby'\r\n          icon={<LocationOnIcon />}\r\n        />\r\n        <BottomNavigationAction\r\n          label='Folder'\r\n          value='folder'\r\n          icon={<FolderIcon />}\r\n        />\r\n      </BottomNavigation> */}\r\n      <Box textAlign='center' pt={0.4} pb={0}>\r\n        <Typography className={classes.footerText}>\r\n          © 2021{' '}\r\n          <a target='_blank' href='http://maksydev.site/'>\r\n            Maksydev.site\r\n          </a>\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\hoc\\MainLayout\\styles.js",["589","590"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n\r\n}));\r\n","E:\\WWW\\tpservice\\client\\src\\components\\Footer\\styles.js",["591","592","593"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green,blue } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  footer: {\r\n\r\n  },\r\n  footerText:{\r\n    fontSize:12,\r\n  }\r\n}));\r\n","E:\\WWW\\tpservice\\client\\src\\pages\\MyReviews\\MyReview.js",["594","595","596","597"],"import React from 'react'\r\nimport {Box,Grid,Card, CardMedia,Typography} from '@material-ui/core'\r\nimport ReviewCard from '../../components/ReviewCard/ReviewCard'\r\n\r\nexport default function MyReview() {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <ReviewCard/>\r\n    </Grid>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\ReviewCard\\ReviewCard.js",["598"],"import React,{useState,useEffect, Fragment} from 'react'\r\nimport {Box,Grid,Paper,Typography,Card,CardMedia,CardContent, CardActions,Button} from '@material-ui/core'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getMyReviews} from '../../redux/actions/rating'\r\nimport makeStyles from './styles'\r\n\r\nexport default function ReviewCard() {\r\n  const classes = makeStyles();\r\n  const dispatch =useDispatch();\r\n  const [reviews,setReviews]=useState();\r\n  const Data = useSelector((state)=> state.rating.myReviews?.data?.myReviews)\r\n  useEffect(() => {\r\n    dispatch(getMyReviews());\r\n  }, []);\r\n  useEffect(()=>{\r\n    setReviews(Data)\r\n  },[Data])\r\n  console.log('RATINGS', reviews);\r\n  return (\r\n    <Fragment>\r\n      {reviews?.map((review) => (\r\n        <Grid item xs={12} md={3} key={review._id}>\r\n          <Paper elevation={3}>\r\n            <Card>\r\n              <CardMedia\r\n                // className={classes.media}\r\n                image='https://www.meissl.com/media/images/8f24db1f/schweiz.jpg'\r\n                // title={tour.name}\r\n                style={{ height: '150px' }}\r\n              />\r\n              <CardContent>\r\n                <Typography component='div' variant='h6'>\r\n                  {review?.tour?.name} Tour\r\n                </Typography>\r\n                <Typography\r\n                  component='div'\r\n                  variant='body2'\r\n                  className={classes.Review}\r\n                  color='textSecondary'\r\n                >\r\n                  {review?.review}\r\n                </Typography>\r\n                <Box\r\n                  display='flex'\r\n                  alignItems='center'\r\n                  justifyContent='space-between'\r\n                >\r\n                  <Box\r\n                    component='fieldset'\r\n                    mb={3}\r\n                    borderColor='transparent'\r\n                    className={classes.Rating}\r\n                  >\r\n                    <Rating\r\n                      name='read-only'\r\n                      value={review?.rating}\r\n                      precision={0.5}\r\n                      readOnly\r\n                    />\r\n                  </Box>\r\n                  <Typography\r\n                    component='span'\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                  >\r\n                    {new Date(review?.createdAt).toLocaleDateString('en-gb', {\r\n                      day: 'numeric',\r\n                      month: 'numeric',\r\n                      year: 'numeric',\r\n                    })}\r\n                  </Typography>\r\n                </Box>\r\n              </CardContent>\r\n              <CardActions>\r\n                {new Date(review?.createdAt).toDateString() + 10 < Date.now() && (\r\n                  <Button variant='contained' color='secondary'>\r\n                    Delete review\r\n                  </Button>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Paper>\r\n        </Grid>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\ReviewCard\\styles.js",["599"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  Review: {\r\n    marginBottom:15,\r\n    marginTop:15,\r\n    padding: '0px 15px 0px 15px',\r\n  },\r\n  Rating: {\r\n    display: 'inline-flex',\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n","E:\\WWW\\tpservice\\client\\src\\pages\\Dating\\DatingPage.js",["600","601","602","603","604"],"import React, { useRef, Fragment, useState, useEffect } from 'react';\r\nimport makeStyles from './styles';\r\nimport { Grid, Box } from '@material-ui/core';\r\nimport DatingCard from '../../components/DatingCard/DatingCard';\r\nimport './DatingPage.scss';\r\n\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\nlet items = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nexport default function DatingPage() {\r\n  const classes = makeStyles();\r\n  const [realIndex, SetRealIndex] = useState(0);\r\n  const [array, SetArray] = useState(items);\r\n\r\n  useEffect(() => {\r\n    console.log('RealIndex', realIndex);\r\n    console.log(array.length);\r\n  }, [realIndex]);\r\n  const handleLike = () => {\r\n   const newArr = array.filter((item) => item !== realIndex);\r\n\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Swiper\r\n        style={{ paddingBottom: '10px' }}\r\n        allowTouchMove={false}\r\n        spaceBetween={10}\r\n        slidesPerView={1}\r\n        navigation={{\r\n          nextEl: '.swiper-outside-button-next',\r\n          prevEl: '.swiper-outside-button-prev',\r\n        }}\r\n        onSlideChangeTransitionStart={(swiper) => console.log('START', swiper)}\r\n        onSlideNextTransitionEnd={(swiper) => {\r\n          console.log('NEXT', swiper);\r\n          SetRealIndex(swiper.realIndex);\r\n        }}\r\n        onSlideChange={(swiper) => console.log('slide change', swiper)}\r\n      >\r\n        <Box>\r\n          {items.map((item, index) => (\r\n            <SwiperSlide key={index}>\r\n              <DatingCard />\r\n            </SwiperSlide>\r\n          ))}\r\n        </Box>\r\n      </Swiper>\r\n      <Box position='absolute' className={classes.RowsBox}>\r\n        <div className='swiper-outside-button-prev'></div>\r\n        <div className='swiper-outside-button-next' onClick={handleLike}>\r\n          <div className='heartbeatloader-like'>\r\n            <svg\r\n              className='svgdraw-like'\r\n              width='100%'\r\n              height='100%'\r\n              viewBox='0 0 150 400'\r\n              xmlns='http://www.w3.org/2000/svg'\r\n            >\r\n              <path\r\n                className='path-like'\r\n                d='M 0 200 l 40 0 l 5 -40 l 5 40 l 10 0 l 5 15 l 10 -140 l 10 220 l 5 -95 l 10 0 l 5 20 l 5 -20 l 30 0'\r\n                fill='transparent'\r\n                strokeWidth='4'\r\n                stroke='black'\r\n              />\r\n            </svg>\r\n            <div className='innercircle-like'></div>\r\n            <div className='outercircle-like'></div>\r\n          </div>\r\n        </div>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\pages\\Dating\\styles.js",[],"E:\\WWW\\tpservice\\client\\src\\components\\DatingCard\\DatingCard.js",["605"],"import React from 'react';\r\nimport makeStyles from './Styles';\r\nimport './DatingCard.scss';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Card,\r\n  CardMedia,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Chip,\r\n} from '@material-ui/core';\r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport ImageAvatar from '../../components/Avatar/Avatar';\r\nimport WorkOutlinedIcon from '@material-ui/icons/WorkOutlined';\r\n\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\nexport default function DatingCard() {\r\n  const classes = makeStyles();\r\n\r\n  return (\r\n    <Grid item className={classes.Item}>\r\n      <Paper\r\n        className={classes.Paper}\r\n        elevation={3}\r\n        style={{ height: '100%' }}\r\n        // style={{\r\n        //   backgroundImage:\r\n        //     'url(\"https://im.indiatimes.in/content/itimes/photo/2014/Aug/13/1407871069-bhavana-beautiful-indian-girl-android-wallpapers-actress.jpg?w=1400&h=2100&cc=1\")',\r\n        // }}\r\n      >\r\n        <CardMedia>\r\n          <Swiper\r\n            slidesPerView={1}\r\n            style={{ position: 'relative' }}\r\n            navigation={{\r\n              nextEl: '.swiper-inside-button-next',\r\n              prevEl: '.swiper-inside-button-prev',\r\n            }}\r\n\r\n            // allowTouchMove={false}\r\n\r\n          >\r\n            <SwiperSlide>\r\n              <img\r\n                src='https://im.indiatimes.in/content/itimes/photo/2014/Aug/13/1407871069-bhavana-beautiful-indian-girl-android-wallpapers-actress.jpg?w=1400&h=2100&cc=1'\r\n                alt=''\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n              />\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <img\r\n                src='https://im.indiatimes.in/content/itimes/photo/2014/Aug/13/1407871069-bhavana-beautiful-indian-girl-android-wallpapers-actress.jpg?w=1400&h=2100&cc=1'\r\n                alt=''\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n              />\r\n            </SwiperSlide>\r\n\r\n            <Box className={classes.infoBox}>\r\n              <Accordion className={classes.Accordion}>\r\n                <AccordionSummary\r\n                  expandIcon={<InfoOutlined />}\r\n                  aria-controls='accordion-content'\r\n                  id='accordion-content'\r\n                >\r\n                  <Box\r\n                    display='flex'\r\n                    alignItems='center'\r\n                    className={classes.AccordionContent}\r\n                  >\r\n                    <Typography\r\n                      className={classes.Name}\r\n                      variant='h5'\r\n                      component='span'\r\n                    >\r\n                      Yigal&nbsp;\r\n                    </Typography>\r\n                    {/* <Typography\r\n                  className={classes.Age}\r\n                  variant='body1'\r\n                  component='span'\r\n                >\r\n                  {' '} \r\n                  22\r\n                </Typography> */}\r\n                  </Box>\r\n                  <Box\r\n                    display='flex'\r\n                    alignItems='center'\r\n                    style={{ margin: '0px auto' }}\r\n                  >\r\n                    <WorkOutlinedIcon\r\n                      style={{ width: '15px', height: '15px' }}\r\n                    />\r\n                    &nbsp;&nbsp;\r\n                    <Typography component='span' variant='body2'>\r\n                      Microsoft\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    display='flex'\r\n                    alignItems='center'\r\n                    style={{ margin: '0px auto' }}\r\n                  >\r\n                    <ImageAvatar\r\n                      size='small'\r\n                      src='https://tpservice.herokuapp.com/public/img/flags/israel.svg'\r\n                    />\r\n                  </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.AccordionDetails}>\r\n                  <Box>\r\n                    <Typography\r\n                      component='span'\r\n                      style={{ fontWeight: 600, fontSize: 12 }}\r\n                    >\r\n                      About:&nbsp;&nbsp;\r\n                    </Typography>\r\n                    <Typography\r\n                      component='span'\r\n                      className={classes.UserDescription}\r\n                      variant='body2'\r\n                    >\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      Suspendisse malesuada lacus ex, sit amet blandit leo\r\n                      lobortis eget. Lorem ipsum dolor sit amet, consectetur\r\n                      adipiscing elit.\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    display='flex'\r\n                    // justifyContent='center'\r\n                    flexWrap='wrap'\r\n                    alignItems='center'\r\n                    mb={1}\r\n                    className={classes.Tags}\r\n                  >\r\n                    <Typography style={{ fontWeight: 600, fontSize: 12 }}>\r\n                      Interests:\r\n                    </Typography>\r\n                    <Chip size='small' label='Travel' color='primary' />\r\n                    <Chip size='small' label='Sea' color='primary' />\r\n                    <Chip size='small' label='Reading' color='primary' />\r\n                    <Chip size='small' label='Party' color='primary' />\r\n                    <Chip size='small' label='Party' color='primary' />\r\n                    <Chip size='small' label='Party' color='primary' />\r\n                    <Chip size='small' label='Party' color='primary' />\r\n                  </Box>\r\n                  <Box\r\n                    display='flex'\r\n                    // justifyContent='center'\r\n                    flexWrap='wrap'\r\n                    alignItems='center'\r\n                    mb={1}\r\n                    className={classes.TagsLang}\r\n                  >\r\n                    <Typography style={{ fontWeight: 600, fontSize: 12 }}>\r\n                      Languages:\r\n                    </Typography>\r\n                    <Chip size='small' label='English' color='secondary' />\r\n                    <Chip size='small' label='Hebrew' color='secondary' />\r\n                    <Chip size='small' label='Russian' color='secondary' />\r\n                  </Box>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Box>\r\n          </Swiper>\r\n          <div className='swiper-inside-button-prev'></div>\r\n          <div className='swiper-inside-button-next'></div>\r\n        </CardMedia>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","E:\\WWW\\tpservice\\client\\src\\components\\DatingCard\\Styles.js",["606"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  Item: {\r\n    maxWidth: 340,\r\n    width: '100%',\r\n    // marginTop: '4%',\r\n    // marginBottom: '5%',\r\n    margin:'4% auto 0% auto'\r\n  },\r\n\r\n  Paper: {\r\n    width: '100%',\r\n    height: '70vh',\r\n    backgroundPosition: 'top center',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n  },\r\n  infoBox: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex:100,\r\n  },\r\n  Accordion: {\r\n    backgroundColor: 'rgba(245,245,245,0.6)',\r\n  },\r\n\r\n  AccordionContent: {},\r\n  AccordionDetails: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  Name: { fontWeight: 600 },\r\n  Age: { alignItems: 'center' },\r\n  Tags: {\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  TagsLang: {\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n",{"ruleId":"607","severity":1,"message":"608","line":16,"column":42,"nodeType":"609","messageId":"610","endLine":16,"endColumn":43,"fix":"611"},{"ruleId":"612","replacedBy":"613"},{"ruleId":"614","replacedBy":"615"},{"ruleId":"616","severity":1,"message":"617","line":11,"column":1,"nodeType":"618","endLine":29,"endColumn":3},{"ruleId":"619","severity":1,"message":"620","line":4,"column":25,"nodeType":"621","messageId":"622","endLine":4,"endColumn":29},{"ruleId":"619","severity":1,"message":"623","line":4,"column":8,"nodeType":"621","messageId":"622","endLine":4,"endColumn":18},{"ruleId":"619","severity":1,"message":"624","line":1,"column":16,"nodeType":"621","messageId":"622","endLine":1,"endColumn":25},{"ruleId":"619","severity":1,"message":"620","line":3,"column":8,"nodeType":"621","messageId":"622","endLine":3,"endColumn":12},{"ruleId":"619","severity":1,"message":"625","line":9,"column":9,"nodeType":"621","messageId":"622","endLine":9,"endColumn":16},{"ruleId":"619","severity":1,"message":"626","line":2,"column":31,"nodeType":"621","messageId":"622","endLine":2,"endColumn":42},{"ruleId":"619","severity":1,"message":"627","line":5,"column":10,"nodeType":"621","messageId":"622","endLine":5,"endColumn":14},{"ruleId":"619","severity":1,"message":"628","line":26,"column":10,"nodeType":"621","messageId":"622","endLine":26,"endColumn":14},{"ruleId":"619","severity":1,"message":"629","line":51,"column":9,"nodeType":"621","messageId":"622","endLine":51,"endColumn":20},{"ruleId":"619","severity":1,"message":"630","line":3,"column":10,"nodeType":"621","messageId":"622","endLine":3,"endColumn":21},{"ruleId":"619","severity":1,"message":"631","line":4,"column":23,"nodeType":"621","messageId":"622","endLine":4,"endColumn":30},{"ruleId":"619","severity":1,"message":"632","line":20,"column":8,"nodeType":"621","messageId":"622","endLine":20,"endColumn":22},{"ruleId":"619","severity":1,"message":"633","line":38,"column":9,"nodeType":"621","messageId":"622","endLine":38,"endColumn":16},{"ruleId":"619","severity":1,"message":"634","line":9,"column":3,"nodeType":"621","messageId":"622","endLine":9,"endColumn":13},{"ruleId":"619","severity":1,"message":"635","line":18,"column":10,"nodeType":"621","messageId":"622","endLine":18,"endColumn":18},{"ruleId":"619","severity":1,"message":"636","line":18,"column":20,"nodeType":"621","messageId":"622","endLine":18,"endColumn":31},{"ruleId":"619","severity":1,"message":"637","line":29,"column":9,"nodeType":"621","messageId":"622","endLine":29,"endColumn":21},{"ruleId":"619","severity":1,"message":"638","line":1,"column":17,"nodeType":"621","messageId":"622","endLine":1,"endColumn":26},{"ruleId":"619","severity":1,"message":"639","line":3,"column":8,"nodeType":"621","messageId":"622","endLine":3,"endColumn":17},{"ruleId":"619","severity":1,"message":"640","line":13,"column":16,"nodeType":"621","messageId":"622","endLine":13,"endColumn":23},{"ruleId":"616","severity":1,"message":"617","line":8,"column":1,"nodeType":"618","endLine":18,"endColumn":2},{"ruleId":"619","severity":1,"message":"620","line":2,"column":19,"nodeType":"621","messageId":"622","endLine":2,"endColumn":23},{"ruleId":"619","severity":1,"message":"641","line":10,"column":3,"nodeType":"621","messageId":"622","endLine":10,"endColumn":17},{"ruleId":"619","severity":1,"message":"642","line":29,"column":9,"nodeType":"621","messageId":"622","endLine":29,"endColumn":17},{"ruleId":"643","severity":1,"message":"644","line":43,"column":3,"nodeType":"645","messageId":"646","endLine":43,"endColumn":11},{"ruleId":"619","severity":1,"message":"647","line":1,"column":15,"nodeType":"621","messageId":"622","endLine":1,"endColumn":23},{"ruleId":"619","severity":1,"message":"648","line":11,"column":9,"nodeType":"621","messageId":"622","endLine":11,"endColumn":14},{"ruleId":"649","severity":1,"message":"650","line":15,"column":6,"nodeType":"651","endLine":15,"endColumn":8,"suggestions":"652"},{"ruleId":"612","replacedBy":"653"},{"ruleId":"614","replacedBy":"654"},{"ruleId":"619","severity":1,"message":"655","line":2,"column":20,"nodeType":"621","messageId":"622","endLine":2,"endColumn":24},{"ruleId":"619","severity":1,"message":"625","line":13,"column":9,"nodeType":"621","messageId":"622","endLine":13,"endColumn":16},{"ruleId":"619","severity":1,"message":"656","line":1,"column":17,"nodeType":"621","messageId":"622","endLine":1,"endColumn":25},{"ruleId":"619","severity":1,"message":"657","line":4,"column":23,"nodeType":"621","messageId":"622","endLine":4,"endColumn":34},{"ruleId":"619","severity":1,"message":"658","line":5,"column":8,"nodeType":"621","messageId":"622","endLine":5,"endColumn":21},{"ruleId":"619","severity":1,"message":"659","line":6,"column":8,"nodeType":"621","messageId":"622","endLine":6,"endColumn":19},{"ruleId":"619","severity":1,"message":"660","line":7,"column":8,"nodeType":"621","messageId":"622","endLine":7,"endColumn":14},{"ruleId":"619","severity":1,"message":"661","line":8,"column":8,"nodeType":"621","messageId":"622","endLine":8,"endColumn":14},{"ruleId":"619","severity":1,"message":"662","line":9,"column":8,"nodeType":"621","messageId":"622","endLine":9,"endColumn":20},{"ruleId":"663","severity":1,"message":"664","line":60,"column":13,"nodeType":"665","endLine":60,"endColumn":54},{"ruleId":"663","severity":1,"message":"664","line":71,"column":13,"nodeType":"665","endLine":71,"endColumn":54},{"ruleId":"663","severity":1,"message":"664","line":83,"column":13,"nodeType":"665","endLine":83,"endColumn":45},{"ruleId":"619","severity":1,"message":"647","line":1,"column":27,"nodeType":"621","messageId":"622","endLine":1,"endColumn":35},{"ruleId":"619","severity":1,"message":"666","line":4,"column":8,"nodeType":"621","messageId":"622","endLine":4,"endColumn":18},{"ruleId":"619","severity":1,"message":"667","line":5,"column":10,"nodeType":"621","messageId":"622","endLine":5,"endColumn":19},{"ruleId":"649","severity":1,"message":"650","line":16,"column":6,"nodeType":"651","endLine":16,"endColumn":46,"suggestions":"668"},{"ruleId":"619","severity":1,"message":"669","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":21},{"ruleId":"619","severity":1,"message":"670","line":8,"column":3,"nodeType":"621","messageId":"622","endLine":8,"endColumn":7},{"ruleId":"619","severity":1,"message":"671","line":14,"column":3,"nodeType":"621","messageId":"622","endLine":14,"endColumn":12},{"ruleId":"619","severity":1,"message":"672","line":17,"column":3,"nodeType":"621","messageId":"622","endLine":17,"endColumn":9},{"ruleId":"619","severity":1,"message":"673","line":36,"column":10,"nodeType":"621","messageId":"622","endLine":36,"endColumn":17},{"ruleId":"619","severity":1,"message":"674","line":45,"column":9,"nodeType":"621","messageId":"622","endLine":45,"endColumn":17},{"ruleId":"675","severity":1,"message":"676","line":191,"column":15,"nodeType":"677","endLine":191,"endColumn":53},{"ruleId":"619","severity":1,"message":"647","line":1,"column":15,"nodeType":"621","messageId":"622","endLine":1,"endColumn":23},{"ruleId":"619","severity":1,"message":"624","line":1,"column":24,"nodeType":"621","messageId":"622","endLine":1,"endColumn":33},{"ruleId":"619","severity":1,"message":"667","line":10,"column":3,"nodeType":"621","messageId":"622","endLine":10,"endColumn":12},{"ruleId":"619","severity":1,"message":"678","line":27,"column":7,"nodeType":"621","messageId":"622","endLine":27,"endColumn":20},{"ruleId":"619","severity":1,"message":"679","line":34,"column":7,"nodeType":"621","messageId":"622","endLine":34,"endColumn":15},{"ruleId":"616","severity":1,"message":"617","line":10,"column":1,"nodeType":"618","endLine":25,"endColumn":3},{"ruleId":"616","severity":1,"message":"617","line":14,"column":1,"nodeType":"618","endLine":35,"endColumn":3},{"ruleId":"649","severity":1,"message":"680","line":28,"column":6,"nodeType":"651","endLine":28,"endColumn":13,"suggestions":"681"},{"ruleId":"643","severity":1,"message":"682","line":38,"column":5,"nodeType":"645","messageId":"646","endLine":38,"endColumn":12},{"ruleId":"619","severity":1,"message":"624","line":1,"column":25,"nodeType":"621","messageId":"622","endLine":1,"endColumn":34},{"ruleId":"619","severity":1,"message":"657","line":10,"column":20,"nodeType":"621","messageId":"622","endLine":10,"endColumn":31},{"ruleId":"619","severity":1,"message":"683","line":15,"column":18,"nodeType":"621","messageId":"622","endLine":15,"endColumn":27},{"ruleId":"619","severity":1,"message":"684","line":5,"column":3,"nodeType":"621","messageId":"622","endLine":5,"endColumn":8},{"ruleId":"619","severity":1,"message":"685","line":6,"column":3,"nodeType":"621","messageId":"622","endLine":6,"endColumn":15},{"ruleId":"619","severity":1,"message":"620","line":9,"column":10,"nodeType":"621","messageId":"622","endLine":9,"endColumn":14},{"ruleId":"619","severity":1,"message":"686","line":11,"column":8,"nodeType":"621","messageId":"622","endLine":11,"endColumn":11},{"ruleId":"619","severity":1,"message":"687","line":14,"column":8,"nodeType":"621","messageId":"622","endLine":14,"endColumn":16},{"ruleId":"619","severity":1,"message":"661","line":15,"column":8,"nodeType":"621","messageId":"622","endLine":15,"endColumn":14},{"ruleId":"619","severity":1,"message":"688","line":16,"column":10,"nodeType":"621","messageId":"622","endLine":16,"endColumn":13},{"ruleId":"619","severity":1,"message":"689","line":17,"column":8,"nodeType":"621","messageId":"622","endLine":17,"endColumn":20},{"ruleId":"619","severity":1,"message":"690","line":18,"column":8,"nodeType":"621","messageId":"622","endLine":18,"endColumn":17},{"ruleId":"619","severity":1,"message":"691","line":19,"column":8,"nodeType":"621","messageId":"622","endLine":19,"endColumn":22},{"ruleId":"619","severity":1,"message":"692","line":20,"column":8,"nodeType":"621","messageId":"622","endLine":20,"endColumn":20},{"ruleId":"619","severity":1,"message":"693","line":33,"column":3,"nodeType":"621","messageId":"622","endLine":33,"endColumn":13},{"ruleId":"619","severity":1,"message":"694","line":47,"column":8,"nodeType":"621","messageId":"622","endLine":47,"endColumn":26},{"ruleId":"619","severity":1,"message":"695","line":49,"column":8,"nodeType":"621","messageId":"622","endLine":49,"endColumn":23},{"ruleId":"619","severity":1,"message":"696","line":76,"column":18,"nodeType":"621","messageId":"622","endLine":76,"endColumn":27},{"ruleId":"619","severity":1,"message":"697","line":79,"column":10,"nodeType":"621","messageId":"622","endLine":79,"endColumn":19},{"ruleId":"619","severity":1,"message":"698","line":79,"column":21,"nodeType":"621","messageId":"622","endLine":79,"endColumn":33},{"ruleId":"619","severity":1,"message":"673","line":80,"column":10,"nodeType":"621","messageId":"622","endLine":80,"endColumn":17},{"ruleId":"619","severity":1,"message":"699","line":80,"column":19,"nodeType":"621","messageId":"622","endLine":80,"endColumn":29},{"ruleId":"619","severity":1,"message":"700","line":81,"column":10,"nodeType":"621","messageId":"622","endLine":81,"endColumn":19},{"ruleId":"619","severity":1,"message":"701","line":81,"column":21,"nodeType":"621","messageId":"622","endLine":81,"endColumn":33},{"ruleId":"619","severity":1,"message":"702","line":95,"column":9,"nodeType":"621","messageId":"622","endLine":95,"endColumn":24},{"ruleId":"619","severity":1,"message":"703","line":117,"column":9,"nodeType":"621","messageId":"622","endLine":117,"endColumn":26},{"ruleId":"649","severity":1,"message":"704","line":127,"column":6,"nodeType":"651","endLine":127,"endColumn":16,"suggestions":"705"},{"ruleId":"663","severity":1,"message":"664","line":487,"column":19,"nodeType":"665","endLine":489,"endColumn":20},{"ruleId":"619","severity":1,"message":"706","line":8,"column":10,"nodeType":"621","messageId":"622","endLine":8,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":10,"column":1,"nodeType":"618","endLine":23,"endColumn":2},{"ruleId":"619","severity":1,"message":"693","line":14,"column":3,"nodeType":"621","messageId":"622","endLine":14,"endColumn":13},{"ruleId":"619","severity":1,"message":"707","line":16,"column":8,"nodeType":"621","messageId":"622","endLine":16,"endColumn":26},{"ruleId":"619","severity":1,"message":"708","line":17,"column":8,"nodeType":"621","messageId":"622","endLine":17,"endColumn":41},{"ruleId":"619","severity":1,"message":"709","line":36,"column":16,"nodeType":"621","messageId":"622","endLine":36,"endColumn":23},{"ruleId":"649","severity":1,"message":"710","line":65,"column":6,"nodeType":"651","endLine":65,"endColumn":12,"suggestions":"711"},{"ruleId":"619","severity":1,"message":"712","line":67,"column":9,"nodeType":"621","messageId":"622","endLine":67,"endColumn":19},{"ruleId":"619","severity":1,"message":"688","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":13},{"ruleId":"619","severity":1,"message":"656","line":1,"column":38,"nodeType":"621","messageId":"622","endLine":1,"endColumn":46},{"ruleId":"619","severity":1,"message":"713","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":17},{"ruleId":"619","severity":1,"message":"620","line":2,"column":19,"nodeType":"621","messageId":"622","endLine":2,"endColumn":23},{"ruleId":"619","severity":1,"message":"672","line":7,"column":3,"nodeType":"621","messageId":"622","endLine":7,"endColumn":9},{"ruleId":"619","severity":1,"message":"641","line":9,"column":3,"nodeType":"621","messageId":"622","endLine":9,"endColumn":17},{"ruleId":"619","severity":1,"message":"714","line":25,"column":8,"nodeType":"621","messageId":"622","endLine":25,"endColumn":29},{"ruleId":"619","severity":1,"message":"715","line":26,"column":8,"nodeType":"621","messageId":"622","endLine":26,"endColumn":29},{"ruleId":"619","severity":1,"message":"716","line":29,"column":8,"nodeType":"621","messageId":"622","endLine":29,"endColumn":30},{"ruleId":"649","severity":1,"message":"650","line":45,"column":8,"nodeType":"651","endLine":45,"endColumn":10,"suggestions":"717"},{"ruleId":"619","severity":1,"message":"672","line":2,"column":9,"nodeType":"621","messageId":"622","endLine":2,"endColumn":15},{"ruleId":"619","severity":1,"message":"718","line":3,"column":8,"nodeType":"621","messageId":"622","endLine":3,"endColumn":17},{"ruleId":"619","severity":1,"message":"719","line":5,"column":8,"nodeType":"621","messageId":"622","endLine":5,"endColumn":21},{"ruleId":"619","severity":1,"message":"720","line":7,"column":8,"nodeType":"621","messageId":"622","endLine":7,"endColumn":25},{"ruleId":"619","severity":1,"message":"624","line":1,"column":27,"nodeType":"621","messageId":"622","endLine":1,"endColumn":36},{"ruleId":"619","severity":1,"message":"721","line":14,"column":3,"nodeType":"621","messageId":"622","endLine":14,"endColumn":9},{"ruleId":"619","severity":1,"message":"722","line":16,"column":3,"nodeType":"621","messageId":"622","endLine":16,"endColumn":13},{"ruleId":"619","severity":1,"message":"723","line":17,"column":3,"nodeType":"621","messageId":"622","endLine":17,"endColumn":14},{"ruleId":"619","severity":1,"message":"724","line":21,"column":3,"nodeType":"621","messageId":"622","endLine":21,"endColumn":21},{"ruleId":"619","severity":1,"message":"725","line":51,"column":24,"nodeType":"621","messageId":"622","endLine":51,"endColumn":39},{"ruleId":"619","severity":1,"message":"623","line":3,"column":8,"nodeType":"621","messageId":"622","endLine":3,"endColumn":18},{"ruleId":"619","severity":1,"message":"647","line":1,"column":17,"nodeType":"621","messageId":"622","endLine":1,"endColumn":25},{"ruleId":"619","severity":1,"message":"726","line":20,"column":8,"nodeType":"621","messageId":"622","endLine":20,"endColumn":19},{"ruleId":"619","severity":1,"message":"727","line":3,"column":3,"nodeType":"621","messageId":"622","endLine":3,"endColumn":26},{"ruleId":"619","severity":1,"message":"728","line":4,"column":3,"nodeType":"621","messageId":"622","endLine":4,"endColumn":23},{"ruleId":"619","severity":1,"message":"729","line":9,"column":3,"nodeType":"621","messageId":"622","endLine":9,"endColumn":22},{"ruleId":"619","severity":1,"message":"728","line":2,"column":3,"nodeType":"621","messageId":"622","endLine":2,"endColumn":23},{"ruleId":"619","severity":1,"message":"727","line":3,"column":3,"nodeType":"621","messageId":"622","endLine":3,"endColumn":26},{"ruleId":"616","severity":1,"message":"617","line":14,"column":1,"nodeType":"618","endLine":36,"endColumn":3},{"ruleId":"619","severity":1,"message":"624","line":1,"column":17,"nodeType":"621","messageId":"622","endLine":1,"endColumn":26},{"ruleId":"619","severity":1,"message":"657","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":21},{"ruleId":"619","severity":1,"message":"641","line":10,"column":3,"nodeType":"621","messageId":"622","endLine":10,"endColumn":17},{"ruleId":"649","severity":1,"message":"650","line":34,"column":6,"nodeType":"651","endLine":34,"endColumn":8,"suggestions":"730"},{"ruleId":"619","severity":1,"message":"688","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":13},{"ruleId":"619","severity":1,"message":"647","line":1,"column":17,"nodeType":"621","messageId":"622","endLine":1,"endColumn":25},{"ruleId":"619","severity":1,"message":"731","line":12,"column":3,"nodeType":"621","messageId":"622","endLine":12,"endColumn":8},{"ruleId":"619","severity":1,"message":"667","line":13,"column":3,"nodeType":"621","messageId":"622","endLine":13,"endColumn":12},{"ruleId":"619","severity":1,"message":"672","line":14,"column":3,"nodeType":"621","messageId":"622","endLine":14,"endColumn":9},{"ruleId":"619","severity":1,"message":"732","line":16,"column":3,"nodeType":"621","messageId":"622","endLine":16,"endColumn":12},{"ruleId":"619","severity":1,"message":"733","line":22,"column":3,"nodeType":"621","messageId":"622","endLine":22,"endColumn":14},{"ruleId":"619","severity":1,"message":"641","line":23,"column":3,"nodeType":"621","messageId":"622","endLine":23,"endColumn":17},{"ruleId":"619","severity":1,"message":"624","line":1,"column":24,"nodeType":"621","messageId":"622","endLine":1,"endColumn":33},{"ruleId":"616","severity":1,"message":"617","line":10,"column":1,"nodeType":"618","endLine":23,"endColumn":3},{"ruleId":"619","severity":1,"message":"713","line":3,"column":10,"nodeType":"621","messageId":"622","endLine":3,"endColumn":17},{"ruleId":"619","severity":1,"message":"734","line":4,"column":8,"nodeType":"621","messageId":"622","endLine":4,"endColumn":24},{"ruleId":"619","severity":1,"message":"735","line":5,"column":8,"nodeType":"621","messageId":"622","endLine":5,"endColumn":30},{"ruleId":"619","severity":1,"message":"736","line":6,"column":8,"nodeType":"621","messageId":"622","endLine":6,"endColumn":18},{"ruleId":"619","severity":1,"message":"737","line":7,"column":8,"nodeType":"621","messageId":"622","endLine":7,"endColumn":19},{"ruleId":"619","severity":1,"message":"689","line":8,"column":8,"nodeType":"621","messageId":"622","endLine":8,"endColumn":20},{"ruleId":"619","severity":1,"message":"738","line":9,"column":8,"nodeType":"621","messageId":"622","endLine":9,"endColumn":22},{"ruleId":"619","severity":1,"message":"739","line":14,"column":10,"nodeType":"621","messageId":"622","endLine":14,"endColumn":15},{"ruleId":"619","severity":1,"message":"740","line":16,"column":9,"nodeType":"621","messageId":"622","endLine":16,"endColumn":21},{"ruleId":"741","severity":1,"message":"742","line":47,"column":11,"nodeType":"677","endLine":47,"endColumn":59},{"ruleId":"619","severity":1,"message":"688","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":13},{"ruleId":"619","severity":1,"message":"743","line":2,"column":15,"nodeType":"621","messageId":"622","endLine":2,"endColumn":20},{"ruleId":"619","severity":1,"message":"688","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":13},{"ruleId":"619","severity":1,"message":"743","line":2,"column":15,"nodeType":"621","messageId":"622","endLine":2,"endColumn":20},{"ruleId":"619","severity":1,"message":"744","line":2,"column":21,"nodeType":"621","messageId":"622","endLine":2,"endColumn":25},{"ruleId":"619","severity":1,"message":"745","line":2,"column":9,"nodeType":"621","messageId":"622","endLine":2,"endColumn":12},{"ruleId":"619","severity":1,"message":"670","line":2,"column":18,"nodeType":"621","messageId":"622","endLine":2,"endColumn":22},{"ruleId":"619","severity":1,"message":"732","line":2,"column":24,"nodeType":"621","messageId":"622","endLine":2,"endColumn":33},{"ruleId":"619","severity":1,"message":"634","line":2,"column":34,"nodeType":"621","messageId":"622","endLine":2,"endColumn":44},{"ruleId":"649","severity":1,"message":"650","line":15,"column":6,"nodeType":"651","endLine":15,"endColumn":8,"suggestions":"746"},{"ruleId":"619","severity":1,"message":"688","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":13},{"ruleId":"619","severity":1,"message":"747","line":1,"column":17,"nodeType":"621","messageId":"622","endLine":1,"endColumn":23},{"ruleId":"619","severity":1,"message":"655","line":3,"column":10,"nodeType":"621","messageId":"622","endLine":3,"endColumn":14},{"ruleId":"619","severity":1,"message":"748","line":24,"column":17,"nodeType":"621","messageId":"622","endLine":24,"endColumn":25},{"ruleId":"649","severity":1,"message":"749","line":29,"column":6,"nodeType":"651","endLine":29,"endColumn":17,"suggestions":"750"},{"ruleId":"619","severity":1,"message":"751","line":31,"column":10,"nodeType":"621","messageId":"622","endLine":31,"endColumn":16},{"ruleId":"619","severity":1,"message":"670","line":8,"column":3,"nodeType":"621","messageId":"622","endLine":8,"endColumn":7},{"ruleId":"619","severity":1,"message":"688","line":2,"column":10,"nodeType":"621","messageId":"622","endLine":2,"endColumn":13},"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"752","text":"753"},"no-native-reassign",["754"],"no-negated-in-lhs",["755"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'useLocation' is defined but never used.","'auth' is defined but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'GoogleLogin' is defined but never used.","'connect' is defined but never used.","'ForgotPassword' is defined but never used.","'history' is assigned a value but never used.","'Typography' is defined but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Component' is defined but never used.","'PropTypes' is defined but never used.","'setOpen' is assigned a value but never used.","'CardActionArea' is defined but never used.","'dispatch' is assigned a value but never used.","no-dupe-keys","Duplicate key 'ListItem'.","ObjectExpression","unexpected","'useState' is defined but never used.","'tours' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["756"],["754"],["755"],"'Grid' is defined but never used.","'Fragment' is defined but never used.","'useSelector' is defined but never used.","'SelectCountry' is defined but never used.","'RadioGender' is defined but never used.","'Switch' is defined but never used.","'Avatar' is defined but never used.","'UploadButton' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AdminPanel' is defined but never used.","'Container' is defined but never used.",["757"],"'useDispatch' is defined but never used.","'Card' is defined but never used.","'TableHead' is defined but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","'Progress' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Admin_UpdateUser must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'unActiveUsers' is assigned a value but never used.","'allUsers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.userID'. Either include it or remove the dependency array. If 'setUserId' needs the current value of 'props.userID', you can also switch to useReducer instead of useState and read 'props.userID' in the reducer.",["758"],"Duplicate key 'country'.","'setUserId' is assigned a value but never used.","'Popup' is defined but never used.","'ScaleControl' is defined but never used.","'Pin' is defined but never used.","'Collapse' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'IconButton' is defined but never used.","'AirportShuttleIcon' is defined but never used.","'BeachAccessIcon' is defined but never used.","'setTourId' is assigned a value but never used.","'showPopUp' is assigned a value but never used.","'setShowPopUp' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'secondary' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'tourId'. Either include them or remove the dependency array.",["759"],"'setAlert' is defined but never used.","'AddBoxOutlinedIcon' is defined but never used.","'IndeterminateCheckBoxOutlinedIcon' is defined but never used.","'setDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser?.user._id', 'date', and 'tourData'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFormdata' needs the current value of 'date'.",["760"],"'handleBack' is assigned a value but never used.","'NavLink' is defined but never used.","'DateRangeOutlinedIcon' is defined but never used.","'PeopleAltOutlinedIcon' is defined but never used.","'EuroSymbolOutlinedIcon' is defined but never used.",["761"],"'TextField' is defined but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'setSelectedDate' is assigned a value but never used.","'ImageAvatar' is defined but never used.","'GETALL_BOOKINGS_SUCCESS' is defined but never used.","'GETALL_BOOKINGS_FAIL' is defined but never used.","'DELETE_BOOKING_FAIL' is defined but never used.",["762"],"'Paper' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'FolderIcon' is defined but never used.","'RestoreIcon' is defined but never used.","'LocationOnIcon' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'green' is defined but never used.","'blue' is defined but never used.","'Box' is defined but never used.",["763"],"'useRef' is defined but never used.","'SetArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'array.length'. Either include it or remove the dependency array.",["764"],"'newArr' is assigned a value but never used.",[519,520],"","no-global-assign","no-unsafe-negation",{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"765","fix":"775"},{"desc":"765","fix":"776"},{"desc":"765","fix":"777"},{"desc":"778","fix":"779"},"Update the dependencies array to be: [dispatch]",{"range":"780","text":"781"},"Update the dependencies array to be: [users.updatedUser, users.deletedUser, dispatch]",{"range":"782","text":"783"},"Update the dependencies array to be: [props.userID, users]",{"range":"784","text":"785"},"Update the dependencies array to be: [bookings, dispatch, tourId]",{"range":"786","text":"787"},"Update the dependencies array to be: [currentUser?.user._id, date, tour, tourData]",{"range":"788","text":"789"},{"range":"790","text":"781"},{"range":"791","text":"781"},{"range":"792","text":"781"},"Update the dependencies array to be: [array.length, realIndex]",{"range":"793","text":"794"},[487,489],"[dispatch]",[621,661],"[users.updatedUser, users.deletedUser, dispatch]",[970,977],"[props.userID, users]",[4423,4433],"[bookings, dispatch, tourId]",[1766,1772],"[currentUser?.user._id, date, tour, tourData]",[1401,1403],[898,900],[645,647],[1013,1024],"[array.length, realIndex]"]